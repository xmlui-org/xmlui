@use "@components-core/theming/themes" as t;

// --- This code snippet is required to collect the theme variables used in this module
$themeVars: ();
@function createThemeVar($componentVariable) {
  $themeVars: t.appendThemeVar($themeVars, $componentVariable) !global;
  @return t.getThemeVar($themeVars, $componentVariable);
}

// --- Theme vars for paddings
$component: "Footer";
$themeVars: t.appendPaddingVars($themeVars, $component) !global;

// --- Other theme vars
$color-bg-Footer: createThemeVar("color-bg-#{$component}");
$height-Footer: createThemeVar("height-#{$component}");
$padding-horizontal-Footer: createThemeVar("padding-horizontal-#{$component}");
$padding-vertical-Footer: createThemeVar("padding-vertical-#{$component}");
$font-size-Footer: createThemeVar("font-size-#{$component}");
$vertical-alignment-Footer: createThemeVar("vertical-alignment-#{$component}");
$max-content-width-Footer: createThemeVar("max-content-width-#{$component}");

.wrapper {
  width: 100%;
  display: flex;
  min-height: 0;
  height: $height-Footer;
  flex-direction: row;
  padding-left: $padding-horizontal-Footer;
  padding-right: $padding-horizontal-Footer;
  padding-top: $padding-vertical-Footer;
  padding-bottom: $padding-vertical-Footer;
  background-color: $color-bg-Footer;
  font-size: $font-size-Footer;
  align-items: $vertical-alignment-Footer;
  max-width: $max-content-width-Footer;
  margin: 0 auto;
}

// --- We export the theme variables to add them to the component renderer
:export{
  themeVars: t.json-stringify($themeVars)
}
