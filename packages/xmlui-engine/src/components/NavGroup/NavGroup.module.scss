@use "@components-core/theming/themes" as t;

// --- This code snippet is required to collect the theme variables used in this module
$themeVars: ();
@function createThemeVar($componentVariable) {
  $themeVars: t.appendThemeVar($themeVars, $componentVariable) !global;
  @return t.getThemeVar($themeVars, $componentVariable);
}

$color-bg-dropdown-NavGroup: createThemeVar("color-bg-dropdown-NavGroup");
$shadow-dropdown-NavGroup: createThemeVar("shadow-dropdown-NavGroup");
$radius-dropdown-NavGroup: createThemeVar("radius-dropdown-NavGroup");

.dropdownList {
  padding: 0;
  margin: 0;
  left: 0;
  top: 0;
  position: absolute;
  overflow-y: hidden;
  background: $color-bg-dropdown-NavGroup;
  list-style: none;
  height: fit-content;
  transition: height 0.2s ease;
  box-shadow: $shadow-dropdown-NavGroup;
  min-width: 11rem;
  border-radius: $radius-dropdown-NavGroup;

  &:focus,
  &:focus-visible {
    outline: none;
  }
}

.withNavGroupChevron {
  display: inline-flex;
  align-items: center;
  &:after{
    content: "";
    display: inline-block;
    vertical-align: 0.306em;
    width: 0.36em;
    height: 0.36em;
    border-bottom: 1px solid currentColor;
    border-left: 1px solid currentColor;
    margin-right: 0.1em;
    margin-left: 0.4em;
    transform: rotate(-45deg);
  }

  &.pointRight{
    flex: 1;
    &:after{
      margin-left: auto;
      transform: rotate(-135deg);
    }
  }
}


// --- We export the theme variables to add them to the component renderer
:export {
  themeVars: t.json-stringify($themeVars);
}
