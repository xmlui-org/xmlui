@use "xmlui/themes.scss" as t;

// --- This code snippet is required to collect the theme variables used in this module
$themeVars: ();
@function createThemeVar($componentVariable) {
  $themeVars: t.appendThemeVar($themeVars, $componentVariable) !global;
  @return t.getThemeVar($themeVars, $componentVariable);
}

$component: "Search";
$themeVars: t.composeBorderVars($themeVars, $component);
$themeVars: t.composePaddingVars($themeVars, $component);
$backgroundColor-Search: createThemeVar("backgroundColor-#{$component}");
$boxShadow-Search: createThemeVar("boxShadow-#{$component}");

$componentChild: "SearchItem";
$borderRadius-SearchItem: createThemeVar("borderRadius-#{$componentChild}");
$backgroundColor-SearchItem--hover: createThemeVar("backgroundColor-#{$componentChild}--hover");

.searchInput {
  height: 36px;
  width: 280px;
}

.dropdownPanel {
  @include t.borderVars($themeVars, $component);
  @include t.paddingVars($themeVars, $component);
  overflow: hidden;
  max-width: 580px;
}

.listContainer {
  background-color: $backgroundColor-Search;
  box-shadow: $boxShadow-Search;
  max-height: 360px;
  overflow-y: auto;
  scrollbar-gutter: stable;
  scrollbar-width: thin;
  padding: 0.75rem;
}

.item {
  padding-top: 0.4rem;
  padding-bottom: 0.4rem;
  padding-inline: 0.75rem;
  border-radius: $borderRadius-SearchItem;
  cursor: pointer;

  &:hover {
    background-color: $backgroundColor-SearchItem--hover;
  }

  & > a {
    color: var(--xmlui-textColor-primary);

    &:hover {
      color: var(--xmlui-textColor-primary);
    }
    &:active {
      color: var(--xmlui-textColor-primary);
    }
  }

  & > a .snippet {
    padding-top: 0.25rem;
    padding-bottom: 0.25rem;
  }

  &.header:has(+ .content):not(:first-child) {
    margin-top: 0.5rem;
  }

  &.content {}
}

// --- TEMP
/* .list {
  @include t.borderVars($themeVars, $component);
  @include t.paddingVars($themeVars, $component);
  position: absolute;
  right: 0;
  z-index: 1;
  padding: 0.75rem;
  margin-top: 2px;
  background-color: $backgroundColor-Search;
  box-shadow: $boxShadow-Search;
  border-radius: 4px;
  max-height: 360px;
  overflow-y: auto;
  scrollbar-gutter: stable;
  scrollbar-width: thin;
  width: 500px;

  .item {
    list-style: none;
    padding-top: 0.4rem;
    padding-bottom: 0.4rem;
    padding-inline: 0.75rem;

    &:hover {
      background-color: $backgroundColor-SearchItem--hover;
    }

    & > a {
      color: var(--xmlui-textColor-primary);

      &:hover {
        color: var(--xmlui-textColor-primary);
      }
      &:active {
        color: var(--xmlui-textColor-primary);
      }
    }

    & > a .snippet {
      padding-top: 0.25rem;
      padding-bottom: 0.25rem;
    }

    &.header:has(+ .content):not(:first-child) {
      margin-top: 0.5rem;
    }

    &.content {}
  } */

  /* .divider {
    border-top: 2px solid var(--xmlui-color-secondary-300);
    width: 100%;
    margin-top: 4px;
    margin-bottom: 4px;
    padding-inline: 12px;
  }
}*/
// --- TEMP END

:export{
  themeVars: t.json-stringify($themeVars)
}
