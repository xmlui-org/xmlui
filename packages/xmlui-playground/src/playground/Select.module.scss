@use "xmlui/themes.scss" as themes;

.SelectTrigger {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 4px;
  padding: 0 15px;
  font-size: 1rem;
  line-height: 1;
  height: 35px;
  gap: 5px;
  background-color: transparent;
  --tw-text-opacity: 1;
  color: rgba(17,24,39,var(--tw-text-opacity));
}

:is(html[class~=dark] .SelectTrigger) {
  --tw-text-opacity: 1;
  color: rgba(249,250,251,var(--tw-text-opacity));
}
.SelectTrigger:hover {
  background-color: rgba(243,244,246,var(--tw-bg-opacity));
}

:is(html[class~=dark] .SelectTrigger:hover)  {
  --tw-text-opacity: 1;
  color: rgba(249,250,251,var(--tw-text-opacity));
  background-color: hsl(var(--nextra-primary-hue)var(--nextra-primary-saturation)94%/.05);
}

.SelectTrigger:focus {
  box-shadow: none;
}

.SelectIcon {
  color: rgba(17,24,39,var(--tw-text-opacity));
}

:is(html[class~=dark] .SelectIcon) {
  --tw-text-opacity: 1;
  color: rgba(249,250,251,var(--tw-text-opacity));
}

.RadixMenuContent {
  display: flex;
  flex-direction: column;
  min-width: 140px;
  width: fit-content;
  background-color: themes.$backgroundColor;
  border-radius: 6px;
  padding: 6px;
  gap: 5rem;
  box-shadow: 0px 10px 38px -10px rgba(22, 23, 24, 0.35), 0px 10px 20px -15px rgba(22, 23, 24, 0.2);
  animation-duration: 400ms;
  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
  will-change: transform, opacity;
}

:is(html[class~=dark] .RadixMenuContent) {
  background-color: rgba(17,17,17,var(--tw-bg-opacity));
}

.SelectViewport {
  padding: 5px;
}

:is(html[class~=dark] .SelectViewport) {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--nextra-primary-hue)var(--nextra-primary-saturation)77%/.1);
}

.RadixMenuItem {
  font-size: 1rem;
  line-height: 1;
  --tw-text-opacity: 1;
  color: rgba(107,114,128,var(--tw-text-opacity));
  border-radius: 3px;
  display: flex;
  align-items: center;
  padding: .5rem;
  position: relative;
  user-select: none;
  cursor: pointer;
}

:is(html[class~=dark] .RadixMenuItem) {
  --tw-text-opacity: 1;
  color: rgba(163,163,163,var(--tw-text-opacity));
}

.RadixMenuItem[data-highlighted] {
  outline: none;
  background-color: rgba(243,244,246,var(--tw-bg-opacity));
  color: rgba(51,65,85,var(--tw-text-opacity));
}

:is(html[class~=dark] .RadixMenuItem[data-highlighted]) {
  background-color: hsl(var(--nextra-primary-hue)var(--nextra-primary-saturation)94%/.05);
}

.RadixMenuItem[data-state=checked] {
  background-color: hsl(var(--nextra-primary-hue)var(--nextra-primary-saturation)94%/var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--nextra-primary-hue)var(--nextra-primary-saturation)32%/var(--tw-text-opacity));
}

:is(html[class~=dark] .RadixMenuItem[data-state=checked]) {
  --tw-text-opacity: 1;
  color: hsl(var(--nextra-primary-hue)var(--nextra-primary-saturation)45%/var(--tw-text-opacity));
  background-color: hsl(var(--nextra-primary-hue)var(--nextra-primary-saturation)66%/.1);
}

.SelectLabel {
  width: 100%;
  padding: 1rem .5rem .2rem;
  font-size: 0.875rem;
  font-weight: 500;
  line-height: 25px;
  color: rgba(107,114,128,var(--tw-text-opacity));
}

:is(html[class~=dark] .SelectLabel) {
  --tw-text-opacity: 1;
  color: rgba(163,163,163,var(--tw-text-opacity));
}

.RadixMenuItemIndicator {
  position: absolute;
  left: 0;
  width: 25px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

.RadixMenuContent[data-side='top'] {
  animation-name: slideDownAndFade;
}

.RadixMenuContent[data-side='right'] {
  animation-name: slideLeftAndFade;
}

.RadixMenuContent[data-side='bottom'] {
  animation-name: slideUpAndFade;
}

.RadixMenuContent[data-side='left'] {
  animation-name: slideRightAndFade;
}

@keyframes slideUpAndFade {
  from {
    opacity: 0;
    transform: translateY(2px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideRightAndFade {
  from {
    opacity: 0;
    transform: translateX(-2px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideDownAndFade {
  from {
    opacity: 0;
    transform: translateY(-2px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideLeftAndFade {
  from {
    opacity: 0;
    transform: translateX(2px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}
