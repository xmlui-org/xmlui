name: Build and deploy to Azure App Service

concurrency:  # Concurrency ensures that only a single job or workflow using the same concurrency group will run at a time.
  group: deploy-staging
  cancel-in-progress: true

on:
  push:
    branches: [ master ]
env:
  AZURE_WEBAPP_NAME: 'ns-apphub-staging'    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '6.0.200'           # set this to the dot net version to use
  DOCKER_SERVER: 'nsoftwarestaging.azurecr.io'
  IMAGE_NAME: 'nsoftware/albacrm'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: checkout the repo  
        uses: actions/checkout@v3
        
      - name: cache node modules
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
          
      - name: setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: restore dependencies
        run: dotnet restore
      
      - name: dotnet build
        run: dotnet build --no-restore --configuration Release
        
      - name: dotnet publish
        run: dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/published' 

      - name: docker login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.DOCKER_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          
      - name: docker build and push
        run: |
          docker build . -t ${{ env.DOCKER_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }} -t ${{ env.DOCKER_SERVER }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.DOCKER_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.DOCKER_SERVER }}/${{ env.IMAGE_NAME }}:latest
          
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: app service deploy  
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: '${{ env.DOCKER_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}'