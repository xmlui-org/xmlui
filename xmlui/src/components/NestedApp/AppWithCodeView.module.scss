@use "../../components-core/theming/themes" as t;

// --- This code snippet is required to collect the theme variables used in this module
$themeVars: ();
@function createThemeVar($componentVariable) {
  $themeVars: t.appendThemeVar($themeVars, $componentVariable) !global;
  @return t.getThemeVar($themeVars, $componentVariable);
}

$component: "AppWithCodeView";
$background-sideBySide-AppWithCode: createThemeVar("background-sideBySide-#{$component}");
$border-sideBySide-AppWithCode: createThemeVar("border-sideBySide-#{$component}");
$padding-sideBySide-AppWithCode: createThemeVar("padding-sideBySide-#{$component}");
$margin-sideBySide-AppWithCode: createThemeVar("margin-sideBySide-#{$component}");
$gap-sideBySide-AppWithCode: createThemeVar("gap-sideBySide-#{$component}");

@layer components {
  .container {
    display: flex;
    /* default flexbox alignment */
    justify-content: flex-start;
    align-items: stretch;
    min-height: 0;
    min-width: 0;
    gap: $gap-sideBySide-AppWithCode;
    background: $background-sideBySide-AppWithCode;
    border: $border-sideBySide-AppWithCode;
    padding: $padding-sideBySide-AppWithCode;
    margin: $margin-sideBySide-AppWithCode;
  }

  .vertical {
    flex-direction: column;
    gap: var(--stack-gap-default);
    min-height: 0;
  }

  .horizontal {
    flex-direction: row;
  }


  .column {
    width: 50%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
}



// --- We export the theme variables to add them to the component renderer
:export {
  themeVars: t.json-stringify($themeVars);
}