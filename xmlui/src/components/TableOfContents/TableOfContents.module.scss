@use "../../components-core/theming/themes" as t;

$themeVars: ();
@function createThemeVar($componentVariable) {
  $themeVars: t.appendThemeVar($themeVars, $componentVariable) !global;
  @return t.getThemeVar($themeVars, $componentVariable);
}

$component: "TableOfContents";
$themeVars: t.composePaddingVars($themeVars, "#{$component}Item");
$themeVars: t.composeTextVars($themeVars, "#{$component}Item");
$themeVars: t.composePaddingVars($themeVars, "#{$component}Item-level-1");
$themeVars: t.composeTextVars($themeVars, "#{$component}Item-level-1");
$themeVars: t.composePaddingVars($themeVars, "#{$component}Item-level-2");
$themeVars: t.composeTextVars($themeVars, "#{$component}Item-level-2");
$themeVars: t.composePaddingVars($themeVars, "#{$component}Item-level-3");
$themeVars: t.composeTextVars($themeVars, "#{$component}Item-level-3");
$themeVars: t.composePaddingVars($themeVars, "#{$component}Item-level-4");
$themeVars: t.composeTextVars($themeVars, "#{$component}Item-level-4");
$themeVars: t.composePaddingVars($themeVars, "#{$component}Item-level-5");
$themeVars: t.composeTextVars($themeVars, "#{$component}Item-level-5");
$themeVars: t.composePaddingVars($themeVars, "#{$component}Item-level-6");
$themeVars: t.composeTextVars($themeVars, "#{$component}Item-level-6");

.nav {
  background-color: createThemeVar("backgroundColor-TableOfContents");
  min-width: 240px;
  width: createThemeVar("width-TableOfContents");
  align-self: flex-start;
  height: createThemeVar("height-TableOfContents");
  max-height: calc(100vh - var(--header-abs-height) - var(--footer-abs-height));
  overflow-y: auto;
  overflow-x: hidden;
  z-index: 99;
  top: var(--header-height);
  position: sticky;
  scrollbar-color: lab(48.438% 0 0 / 0.4) transparent;
  scrollbar-width: thin;
  border-radius: createThemeVar("borderRadius-TableOfContents");
  border-color: createThemeVar("borderColor-TableOfContents");
  border-width: createThemeVar("borderWidth-TableOfContents");
  border-style: createThemeVar("borderStyle-TableOfContents");
  // --- Do not collapse these padding properties; they are intentionally expanded
  margin-top: createThemeVar("marginTop-TableOfContents");
  margin-bottom: createThemeVar("marginBottom-TableOfContents");
  padding: createThemeVar("paddingVertical-TableOfContents") createThemeVar("paddingHorizontal-TableOfContents");

  .list {
    margin: 0;
    padding: 0;
    list-style: none;

    .listItem {
      list-style-type: none;
      border-left: createThemeVar("borderWidth-#{$component}Item") createThemeVar("borderStyle-#{$component}Item") createThemeVar("borderColor-#{$component}Item");

      .link {
        color: createThemeVar("textColor-#{$component}Item");
        overflow-wrap: break-word;
        display: block;
        @include t.paddingVars($themeVars, "#{$component}Item");
        @include t.textVars($themeVars, "#{$component}Item");

        &.head_1 {
          @include t.paddingVars($themeVars, "#{$component}Item-level-1");
          @include t.textVars($themeVars, "#{$component}Item-level-1");
        }

        &.head_2 {
          @include t.paddingVars($themeVars, "#{$component}Item-level-2");
          @include t.textVars($themeVars, "#{$component}Item-level-2");
        }

        &.head_3 {
          @include t.paddingVars($themeVars, "#{$component}Item-level-3");
          @include t.textVars($themeVars, "#{$component}Item-level-3");
        }

        &.head_4 {
          @include t.paddingVars($themeVars, "#{$component}Item-level-4");
          @include t.textVars($themeVars, "#{$component}Item-level-4");
        }

        &.head_5 {
          @include t.paddingVars($themeVars, "#{$component}Item-level-5");
          @include t.textVars($themeVars, "#{$component}Item-level-5");
        }

        &.head_6 {
          @include t.paddingVars($themeVars, "#{$component}Item-level-6");
          @include t.textVars($themeVars, "#{$component}Item-level-6");
        }
      }

      &:hover {
        .link {
          color: createThemeVar("textColor-#{$component}Item--hover");
        }
      }

      &.active {
        border-left: createThemeVar("borderWidth-#{$component}Item--active") solid createThemeVar("borderColor-#{$component}Item--active");

        .link {
          color: createThemeVar("color-#{$component}Item--active");
          font-weight: createThemeVar("fontWeight-#{$component}Item--active");
        }
      }
    }
  }
}

:export {
  themeVars: t.json-stringify($themeVars);
}
