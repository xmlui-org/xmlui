@use "../../components-core/theming/themes" as t;

// --- This code snippet is required to collect the theme variables used in this module
$themeVars: ();
@function createThemeVar($componentVariable) {
  $themeVars: t.appendThemeVar($themeVars, $componentVariable) !global;
  @return t.getThemeVar($themeVars, $componentVariable);
}

// Define theme variables
$backgroundColor-Pagination: createThemeVar("backgroundColor-Pagination");
$borderColor-Pagination: createThemeVar("borderColor-Pagination");
$borderRadius-selector-Pagination: createThemeVar("borderRadius-selector-Pagination");
$textColor-Pagination: createThemeVar("textColor-Pagination");
$backgroundColor-selector-Pagination: createThemeVar("backgroundColor-selector-Pagination");
$textColor-selector-Pagination: createThemeVar("textColor-selector-Pagination");

@layer components {
  .pagination {
    display: flex;
    align-items: createThemeVar("alignment-Pagination");
    padding: createThemeVar("padding-Pagination");
    gap: t.$space-4;
  }

  .paginationHorizontal {
    flex-direction: row;
    justify-content: space-between;
    width: 100%;
  }

  .paginationVertical {
    flex-direction: column;
    align-items: center;
  }

  .paginationReverse {
    &.paginationHorizontal {
      flex-direction: row-reverse;
    }

    &.paginationVertical {
      flex-direction: column-reverse;
    }
  }

  .selectorContainer {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: t.$space-2;
  }

  .pageSizeLabel {
    color: $textColor-selector-Pagination;
    font-size: t.$fontSize-small;
  }

  .pageSizeSelect {
    color: $textColor-selector-Pagination;
    background-color: $backgroundColor-selector-Pagination;
    border: 1px solid $borderColor-Pagination;
    border-radius: $borderRadius-selector-Pagination;
    padding: t.$space-1 t.$space-2;
    font-size: t.$fontSize-small;

    &:focus {
      //outline: 2px solid t.$color-primary-400;
      outline-offset: 2px;
    }

    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }
  }

  .paginationList {
    list-style: none;
    padding: 0;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: createThemeVar("alignment-Pagination");
    gap: createThemeVar("gap-Pagination");

    li {
      margin: 0;
    }

    &.paginationListVertical {
      flex-direction: column;
    }
  }
}

// --- We export the theme variables to add them to the component renderer
:export {
  themeVars: t.json-stringify($themeVars);
}
