<App
  var.selectedId="4"
  var.flatData="{[
    { id: '1', name: 'Documents', icon: 'folder' },
    { id: '2', name: 'Projects', icon: 'folder', parentId: '1' },
    { id: '3', name: 'Photos', icon: 'folder', parentId: '1' },
    { id: '4', name: 'main.js', icon: 'code', parentId: '2' },
    { id: '5', name: 'style.css', icon: 'code', parentId: '2' },
    { id: '6', name: 'vacation.jpg', icon: 'image', parentId: '3' }
  ]}"
>
  <VStack padding="$space-4" gap="$space-4">
    <VStack gap="$space-2">
      <Text variant="h2">Test 1: Basic Flat Data Format</Text>
      <Text>Testing Tree component with flat data structure using parentId relationships</Text>
    </VStack>
    
    <Card padding="$space-3" height="300px">
      <Tree
        data="{flatData}"
        dataFormat="flat"
        idField="id"
        labelField="name"
        iconField="icon"
        parentField="parentId"
        selectedValue="{selectedId}"
        defaultExpanded="first-level"
        autoExpandToSelection="true"
        onSelectionChanged="{(event) => { 
          console.log('Selection Event:', event); 
          console.log('Selected ID:', event.selectedId);
          console.log('Selected Item:', event.selectedItem);
          updateState({ selectedId: event.selectedId });
        }}"
      >
        <property name="itemTemplate">
          <HStack verticalAlignment="center" gap="$space-2">
            <Text when="{$item.icon === 'folder'}">📁</Text>
            <Text when="{$item.icon === 'code'}">💻</Text>
            <Text when="{$item.icon === 'image'}">🖼️</Text>
            <Text when="{!['folder', 'code', 'image'].includes($item.icon)}">📄</Text>
            <Text value="{$item.name}" weight="{$isSelected ? 'bold' : 'normal'}" />
            <Text when="{$isSelected}" value="← SELECTED" variant="accent" />
            <Text value="(depth: {$item.depth})" variant="body-2" />
          </HStack>
        </property>
      </Tree>
    </Card>

    <Card padding="$space-3" backgroundColor="$surface-2">
      <VStack gap="$space-2">
        <Text variant="h3">Currently Selected: {selectedId || 'None'}</Text>
        
        <Text variant="h3">Expected Results:</Text>
        <VStack gap="$space-1">
          <Text>• Documents folder should be at root level (depth 0)</Text>
          <Text>• Projects and Photos should be children of Documents (depth 1)</Text>
          <Text>• Files should be children of their respective folders (depth 2)</Text>
          <Text>• main.js (ID: 4) should be initially selected and show "← SELECTED"</Text>
          <Text>• First level should be expanded by default</Text>
          <Text>• Tree should auto-expand to show selected main.js file</Text>
          <Text>• Selected item should appear bold</Text>
        </VStack>
        
        <Text variant="h3">Data Format Test:</Text>
        <VStack gap="$space-1">
          <Text>• Flat data format with parentId relationships</Text>
          <Text>• Custom field mapping (id, name, icon, parentId)</Text>
          <Text>• Source ID to internal UID mapping should work</Text>
        </VStack>
      </VStack>
    </Card>
  </VStack>
</App>