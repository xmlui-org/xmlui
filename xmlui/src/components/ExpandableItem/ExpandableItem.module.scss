@use "../../components-core/theming/themes" as t;

// --- This code snippet is required to collect the theme variables used in this module
$themeVars: ();
@function createThemeVar($componentVariable) {
  $themeVars: t.appendThemeVar($themeVars, $componentVariable) !global;
  @return t.getThemeVar($themeVars, $componentVariable);
}

$component: "ExpandableItem";
$themeVars: t.composeBorderVars($themeVars, $component);
$themeVars: t.composePaddingVars($themeVars, $component);
$themeVars: t.composePaddingVars($themeVars, "content-#{$component}");
$backgroundColor-ExpandableItem: createThemeVar("backgroundColor-#{$component}");
$color-ExpandableItem: createThemeVar("color-#{$component}");
$color-ExpandableItem--disabled: createThemeVar("color-#{$component}--disabled");
$fontFamily-ExpandableItem: createThemeVar("fontFamily-#{$component}");
$fontSize-ExpandableItem: createThemeVar("fontSize-#{$component}");
$fontWeight-ExpandableItem: createThemeVar("fontWeight-#{$component}");
$paddingVertical-ExpandableItem-summary: createThemeVar("paddingVertical-ExpandableItem-summary");
$paddingHorizontal-ExpandableItem-summary: createThemeVar("paddingHorizontal-ExpandableItem-summary");
$gap-ExpandableItem: createThemeVar("gap-ExpandableItem");
$transition-ExpandableItem: createThemeVar("transition-ExpandableItem");

@layer components {
  .expandableItem {
    width: fit-content;
    @include t.borderVars($themeVars, $component);
    @include t.paddingVars($themeVars, $component);
    background-color: $backgroundColor-ExpandableItem;
    color: $color-ExpandableItem;
    font-family: $fontFamily-ExpandableItem;
    font-size: $fontSize-ExpandableItem;
    font-weight: $fontWeight-ExpandableItem;
    transition: $transition-ExpandableItem;
    
    &.disabled {
      color: $color-ExpandableItem--disabled;
      cursor: not-allowed;
    }
    
    .summary {
      display: inline-flex;
      align-items: center;
      gap: $gap-ExpandableItem;
      cursor: pointer;
      
      &.iconStart {
        flex-direction: row;
      }
      
      &.iconEnd {
        flex-direction: row-reverse;
        justify-content: space-between;
      }
      
      .icon {
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .switch {
        display: flex;
        align-items: center;
      }
      
      .summaryContent {
        flex: 1;
      }
    }

    &.withSwitch {
      .summary {
        cursor: pointer;
      }
    }
    
    .content {
      width: 100%;
    @include t.paddingVars($themeVars, "content-#{$component}");
    }
    
    &.disabled .summary {
      cursor: not-allowed;
    }
  }
}

// --- We export the theme variables to add them to the component renderer
:export {
  themeVars: t.json-stringify($themeVars);
}

