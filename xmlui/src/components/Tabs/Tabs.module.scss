@use "../../components-core/theming/themes" as t;

// --- This code snippet is required to collect the theme variables used in this module
$component: "Tabs";
$themeVars: ();
@function createThemeVar($componentVariable) {
  $themeVars: t.appendThemeVar($themeVars, $componentVariable) !global;
  @return t.getThemeVar($themeVars, $componentVariable);
}

$backgroundColor-Tabs: createThemeVar("backgroundColor-Tabs");
$borderColor-Tabs: createThemeVar("borderColor-Tabs");
$borderWidth-Tabs: createThemeVar("borderWidth-Tabs");
$borderColor-active-Tabs: createThemeVar("borderColor-active-Tabs");
$backgroundColor-trigger-Tabs: createThemeVar("backgroundColor-trigger-Tabs");
$color-trigger-Tabs: createThemeVar("color-trigger-Tabs");
$backgroundColor-trigger-Tabs--hover: createThemeVar("backgroundColor-trigger-Tabs--hover");
$backgroundColor-list-Tabs: createThemeVar("backgroundColor-list-Tabs");

.tabs {
  display: flex;
  flex: 1 1 auto;
  width: 100%;
  background-color: $backgroundColor-Tabs;
  overflow: hidden;
  &[data-orientation='horizontal'] {
    flex-direction: row;
  }

  &[data-orientation='vertical'] {
    flex-direction: column;
  }
}

.filler {
  flex: 1 1 auto;

  &[data-orientation='horizontal'] {
    border-right-width: $borderWidth-Tabs;
    border-right-style: solid;
    border-right-color: $borderColor-Tabs;
  }

  &[data-orientation='vertical'] {
    border-bottom-width: $borderWidth-Tabs;
    border-bottom-style: solid;
    border-bottom-color: $borderColor-Tabs;
  }
}


.tabTrigger {
  //flex: 1 1 auto;
  font-family: inherit;
  color: $color-trigger-Tabs;
  background-color: $backgroundColor-trigger-Tabs;
  padding: t.$space-4;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 15px;
  line-height: 1;
  user-select: none;
  border-color: transparent;

  &:hover {
    background-color: $backgroundColor-trigger-Tabs--hover;
  }

  &[data-orientation='horizontal'] {
    border-right-width: $borderWidth-Tabs;
    border-right-style: solid;
    border-right-color: $borderColor-Tabs;

    &[data-state='active'] {
      border-right-width: $borderWidth-Tabs;
      border-right-style: solid;
      border-right-color: $borderColor-active-Tabs;
    }
  }

  &[data-orientation='vertical'] {
    border-bottom-width: $borderWidth-Tabs;
    border-bottom-style: solid;
    border-bottom-color: $borderColor-Tabs;

    &[data-state='active'] {
      border-bottom-width: $borderWidth-Tabs;
      border-bottom-style: solid;
      border-bottom-color: $borderColor-active-Tabs;
    }
  }

  &:hover {
    cursor: pointer;
  }
}

.tabsList {
  background-color: $backgroundColor-list-Tabs;
  position: relative;
  z-index: 99;
  overflow: hidden;
  display: flex;
  flex-shrink: 0;
  scrollbar-width: thin;

  &[data-orientation='horizontal'] {
    flex-direction: column;
  }

  &[data-orientation='vertical'] {
    flex-direction: row;
  }
}

.tabsList:hover {
  overflow: auto;
}

.tabsContent {
  flex-grow: 1;
  outline: none;
}

// --- We export the theme variables to add them to the component renderer
:export {
  themeVars: t.json-stringify($themeVars)
}
