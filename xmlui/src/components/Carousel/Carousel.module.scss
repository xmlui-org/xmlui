@use "../../components-core/theming/themes" as t;

// --- This code snippet is required to collect the theme variables used in this module
$themeVars: ();
@function createThemeVar($componentVariable) {
  $themeVars: t.appendThemeVar($themeVars, $componentVariable) !global;
  @return t.getThemeVar($themeVars, $componentVariable);
}

$component: "Carousel";

// Generic Carousel variables
$width-Carousel: createThemeVar("width-Carousel");
$height-Carousel: createThemeVar("height-Carousel");

// Control variables
$height-control-Carousel: createThemeVar("height-control-Carousel");
$width-control-Carousel: createThemeVar("width-control-Carousel");
$textColor-control-Carousel: createThemeVar("textColor-control-Carousel");
$backgroundColor-control-Carousel: createThemeVar("backgroundColor-control-Carousel");
$borderRadius-control-Carousel: createThemeVar("borderRadius-control-Carousel");
$backgroundColor-control-Carousel--hover: createThemeVar("backgroundColor-control-Carousel--hover");
$textColor-control-Carousel--hover: createThemeVar("textColor-control-Carousel--hover");
$backgroundColor-control-Carousel--active: createThemeVar("backgroundColor-control-Carousel--active");
$textColor-control-Carousel--active: createThemeVar("textColor-control-Carousel--active");
$textColor-control-Carousel--disabled: createThemeVar("textColor-control-Carousel--disabled");
$backgroundColor-control-Carousel--disabled: createThemeVar("backgroundColor-control-Carousel--disabled");

// Indicator variables
$width-indicator-Carousel: createThemeVar("width-indicator-Carousel");
$height-indicator-Carousel: createThemeVar("height-indicator-Carousel");
$textColor-indicator-Carousel: createThemeVar("textColor-indicator-Carousel");
$backgroundColor-indicator-Carousel: createThemeVar("backgroundColor-indicator-Carousel");
$backgroundColor-indicator-Carousel--hover: createThemeVar("backgroundColor-indicator-Carousel--hover");
$textColor-indicator-Carousel--hover: createThemeVar("textColor-indicator-Carousel--hover");
$backgroundColor-indicator-Carousel--active: createThemeVar("backgroundColor-indicator-Carousel--active");
$textColor-indicator-Carousel--active: createThemeVar("textColor-indicator-Carousel--active");

@layer components {
  .carousel {
    position: relative;
    overflow: hidden;
    width: $width-Carousel;
    height: $height-Carousel;
    justify-content: center;
    align-items: center;
  }

  .innerWrapper {
    display: flex;
    width: 100%;
    height: 100%;
    flex-direction: row;
    justify-content: center;
  }

  .carouselContentWrapper {
    overflow: hidden;
    height: 100%;
  }

  .carouselContent {
    display: flex;
    height: 100%;
  }

  .vertical {
    flex-direction: column;
  }

  .carouselItem {
    overflow: hidden;
    min-width: 0;
    flex-shrink: 0;
    flex-grow: 0;
    flex-basis: 100%;
  }

  .controls {
    z-index: 99;
    display: flex;
    right: 1rem;
    bottom: 1rem;
    position: absolute;
    gap: .6rem;
  }

  .controlButton {
    transition: all .3s;
    justify-content: center;
    align-items: center;
    display: inline-flex;
    height: $height-control-Carousel;
    width: $width-control-Carousel;
    color: $textColor-control-Carousel;
    background-color: $backgroundColor-control-Carousel;
    border-radius: $borderRadius-control-Carousel;
  }

  .controlButton:hover {
    background-color: $backgroundColor-control-Carousel--hover;
    color: $textColor-control-Carousel--hover;
  }

  .controlButton:active {
    background-color: $backgroundColor-control-Carousel--active;
    color: $textColor-control-Carousel--active;
  }

  .controlButton:disabled {
    color: $textColor-control-Carousel--disabled;
    background-color: $backgroundColor-control-Carousel--disabled;
  }

  .indicators {
    position: absolute;
    bottom: 1rem;
    left: 50%;
    transform: translateX(-50%);
  }

  .indicator {
    transition: all .3s;
    width: $width-indicator-Carousel;
    height: $height-indicator-Carousel;
    border-radius: 2px;
    margin: 0 1px;
    color: $textColor-indicator-Carousel;
    background-color: $backgroundColor-indicator-Carousel;

    &:hover {
      background-color: $backgroundColor-indicator-Carousel--hover;
      color: $textColor-indicator-Carousel--hover;
    }

    &.active {
      background-color: $backgroundColor-indicator-Carousel--active;
      color: $textColor-indicator-Carousel--active;
    }
  }
}


// --- We export the theme variables to add them to the component renderer
:export {
  themeVars: t.json-stringify($themeVars);
}



