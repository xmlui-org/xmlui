@use "../../components-core/theming/themes" as t;

// --- This code snippet is required to collect the theme variables used in this module
$themeVars: ();
@function createThemeVar($componentVariable) {
  $themeVars: t.appendThemeVar($themeVars, $componentVariable) !global;
  @return t.getThemeVar($themeVars, $componentVariable);
}

.iconSwitch {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 6px 12px;
  border-radius: 20px;
  transition: background-color 0.3s ease;
  cursor: pointer;
  min-height: 32px;
  min-width: 48px;
  width: fit-content;
}

.toneSwitchWrapper {
  width: fit-content !important;
  display: inline-block;

  // Override the label width from Toggle component
  :global(.label) {
    width: fit-content !important;
  }
}

// Alternative global override for the label class
:global(.toneSwitchContainer) {
  width: fit-content !important;
  
  :global(.label) {
    width: fit-content !important;
  }
}

.iconSwitch.light {
  background-color: createThemeVar("backgroundColor-ToneSwitch-light");
  color: createThemeVar("color-ToneSwitch-light");
}

.iconSwitch.dark {
  background-color: createThemeVar("backgroundColor-ToneSwitch-dark");
  color: createThemeVar("color-ToneSwitch-dark");
}

.icon {
  font-size: 18px;
  width: 18px;
  height: 18px;
  display: flex;
  align-items: center;
  justify-content: center;
}

// --- We export the theme variables to add them to the component renderer
:export {
  themeVars: t.json-stringify($themeVars);
}
