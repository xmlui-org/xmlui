@use "../../components-core/theming/themes" as t;

// --- This code snippet is required to collect the theme variables used in this module
$themeVars: ();
@function createThemeVar($componentVariable) {
  $themeVars: t.appendThemeVar($themeVars, $componentVariable) !global;
  @return t.getThemeVar($themeVars, $componentVariable);
}

$backgroundColor-DropdownMenu: createThemeVar("backgroundColor-DropdownMenu");
$borderRadius-DropdownMenu: createThemeVar("borderRadius-DropdownMenu");
$boxShadow-DropdownMenu: createThemeVar("boxShadow-DropdownMenu");
$borderColor-DropdownMenu-content: createThemeVar(
  "borderColor-DropdownMenu-content"
);
$borderWidth-DropdownMenu-content: createThemeVar(
  "borderWidth-DropdownMenu-content"
);
$borderStyle-DropdownMenu-content: createThemeVar(
  "borderStyle-DropdownMenu-content"
);
$minWidth-DropdowMenu: createThemeVar("minWidth-DropdownMenu");
$backgroundColor-MenuItem: createThemeVar("backgroundColor-MenuItem");
$color-MenuItem: createThemeVar("color-MenuItem");
$fontFamily-MenuItem: createThemeVar("fontFamily-MenuItem");
$gap-MenuItem: createThemeVar("gap-MenuItem");
$fontSize-MenuItem: createThemeVar("fontSize-MenuItem");
$paddingVertical-MenuItem: createThemeVar("paddingVertical-MenuItem");
$paddingHorizontal-MenuItem: createThemeVar("paddingHorizontal-MenuItem");
$backgroundColor-MenuItem--hover: createThemeVar("backgroundColor-MenuItem--hover");
$backgroundColor-MenuItem--active: createThemeVar("backgroundColor-MenuItem--active");
$backgroundColor-MenuItem--active--hover: createThemeVar("backgroundColor-MenuItem--active--hover");
$color-MenuItem--hover: createThemeVar("color-MenuItem--hover");
$color-MenuItem--active: createThemeVar("color-MenuItem--active");
$color-MenuItem--active--hover: createThemeVar("color-MenuItem--active--hover");
$color-MenuItem--disabled: createThemeVar("color-MenuItem--disabled");
$marginTop-MenuSeparator: createThemeVar("marginTop-MenuSeparator");
$marginBottom-MenuSeparator: createThemeVar("marginBottom-MenuSeparator");
$width-MenuSeparator: createThemeVar("width-MenuSeparator");
$height-MenuSeparator: createThemeVar("height-MenuSeparator");
$color-MenuSeparator: createThemeVar("color-MenuSeparator");

.DropdownMenuContent,
.DropdownMenuSubContent {
  background-color: $backgroundColor-DropdownMenu;
  border-radius: $borderRadius-DropdownMenu;
  min-width: $minWidth-DropdowMenu;
  box-shadow: $boxShadow-DropdownMenu;
  overflow: hidden;
  animation-duration: 400ms;
  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
  will-change: transform, opacity;
  border: $borderWidth-DropdownMenu-content
    $borderStyle-DropdownMenu-content $borderColor-DropdownMenu-content;
}

.DropdownMenuItem,
.DropdownMenuSubTrigger {
  background-color: $backgroundColor-MenuItem;
  color: $color-MenuItem;
  font-family: $fontFamily-MenuItem;
  display: flex;
  border: 0;
  width: 100%;
  gap: $gap-MenuItem;
  font-size: $fontSize-MenuItem;
  padding: $paddingVertical-MenuItem 0;
  padding-inline: $paddingHorizontal-MenuItem; //t.$space-3;
  cursor: pointer;
  align-items: center;
  justify-content: space-between;
  user-select: none;
  outline: none;

  &:hover,
  &[data-highlighted] {
    background-color: $backgroundColor-MenuItem--hover;
    color: $color-MenuItem--hover;
  }

  &.active {
    background-color: $backgroundColor-MenuItem--active;
    color: $color-MenuItem--active;

    &:hover {
      background-color: $backgroundColor-MenuItem--active--hover;
      color: $color-MenuItem--active--hover;
    }
  }

  &.disabled {
    background-color: $backgroundColor-MenuItem;
    color: $color-MenuItem--disabled;
    cursor: not-allowed;

    &:hover {
      background-color: $backgroundColor-MenuItem;
      color: $color-MenuItem--disabled;
    }
  }

  .wrapper {
    flex: 1;
  }
}

.DropdownMenuSeparator {
  margin-top: $marginTop-MenuSeparator;
  margin-bottom: $marginBottom-MenuSeparator;
  width: $width-MenuSeparator;
  height: $height-MenuSeparator;
  background-color: $color-MenuSeparator;
}

// --- We export the theme variables to add them to the component renderer
:export {
  themeVars: t.json-stringify($themeVars);
}
