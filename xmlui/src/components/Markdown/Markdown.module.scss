@use "../../components-core/theming/themes" as t;

// --- This code snippet is required to collect the theme variables used in this module
$themeVars: ();
@function createThemeVar($componentVariable) {
  $themeVars: t.appendThemeVar($themeVars, $componentVariable) !global;
  @return t.getThemeVar($themeVars, $componentVariable);
}

$themeVars: t.composeTextVars($themeVars, "Text") !global;

$paddingTop-MarkDown: createThemeVar("paddingTop-Markdown");
$paddingBottom-MarkDown: createThemeVar("paddingBottom-Markdown");
$backgroundColor-MarkDown: createThemeVar("backgroundColor-Markdown");

$themeVars: t.composePaddingVars($themeVars, "Blockquote");
$themeVars: t.composeBorderVars($themeVars, "Blockquote");
$color-accent-Blockquote: createThemeVar("color-accent-Blockquote");
$width-accent-Blockquote: createThemeVar("width-accent-Blockquote");
$backgroundColor-Blockquote: createThemeVar("backgroundColor-Blockquote");
$paddingLeft-Blockquote: createThemeVar("paddingLeft-Blockquote");
$borderRadius-Blockquote: createThemeVar("borderRadius-Blockquote");
$marginTop-Blockquote: createThemeVar("marginTop-Blockquote");
$marginBottom-Blockquote: createThemeVar("marginBottom-Blockquote");

$themeVars: t.composePaddingVars($themeVars, "Admonition");
$themeVars: t.composeBorderVars($themeVars, "Admonition");
$backgroundColor-Admonition: createThemeVar("backgroundColor-Admonition");
$borderRadius-Admonition: createThemeVar("borderRadius-Admonition");
$size-icon-Admonition: createThemeVar("size-icon-Admonition");
$marginTop-Admonition: createThemeVar("marginTop-Admonition");
$marginBottom-Admonition: createThemeVar("marginBottom-Admonition");
$marginLeft-Admonition-content: createThemeVar("marginLeft-Admonition-content");

$marginTop-HtmlVideo: createThemeVar("marginTop-HtmlVideo");
$marginBottom-HtmlVideo: createThemeVar("marginBottom-HtmlVideo");

// Variables for @layer section - Text-markdown
$marginTop-Text-markdown: createThemeVar("marginTop-Text-markdown");
$marginBottom-Text-markdown: createThemeVar("marginBottom-Text-markdown");
$marginLeft-Text-markdown: createThemeVar("marginLeft-Text-markdown");
$marginRight-Text-markdown: createThemeVar("marginRight-Text-markdown");

// Variables for @layer section - Heading margins in markdown
$marginTop-H1-markdown: createThemeVar("marginTop-H1-markdown");
$marginBottom-H1-markdown: createThemeVar("marginBottom-H1-markdown");
$fontSize-H1-markdown: createThemeVar("fontSize-H1-markdown");
$marginTop-H2-markdown: createThemeVar("marginTop-H2-markdown");
$marginBottom-H2-markdown: createThemeVar("marginBottom-H2-markdown");
$marginTop-H3-markdown: createThemeVar("marginTop-H3-markdown");
$marginBottom-H3-markdown: createThemeVar("marginBottom-H3-markdown");
$marginTop-H4-markdown: createThemeVar("marginTop-H4-markdown");
$marginBottom-H4-markdown: createThemeVar("marginBottom-H4-markdown");
$marginTop-H5-markdown: createThemeVar("marginTop-H5-markdown");
$marginBottom-H5-markdown: createThemeVar("marginBottom-H5-markdown");
$marginTop-H6-markdown: createThemeVar("marginTop-H6-markdown");
$marginBottom-H6-markdown: createThemeVar("marginBottom-H6-markdown");

// Variables for @layer section - Image in markdown
$marginTop-Image-markdown: createThemeVar("marginTop-Image-markdown");
$marginBottom-Image-markdown: createThemeVar("marginBottom-Image-markdown");
$marginLeft-Image-markdown: createThemeVar("marginLeft-Image-markdown");
$marginRight-Image-markdown: createThemeVar("marginRight-Image-markdown");

// Variables for @layer section - Admonition variants
$backgroundColor-Admonition-info: createThemeVar("backgroundColor-Admonition-info");
$borderColor-Admonition-info: createThemeVar("borderColor-Admonition-info");
$backgroundColor-Admonition-warning: createThemeVar("backgroundColor-Admonition-warning");
$borderColor-Admonition-warning: createThemeVar("borderColor-Admonition-warning");
$backgroundColor-Admonition-danger: createThemeVar("backgroundColor-Admonition-danger");
$borderColor-Admonition-danger: createThemeVar("borderColor-Admonition-danger");
$backgroundColor-Admonition-note: createThemeVar("backgroundColor-Admonition-note");
$borderColor-Admonition-note: createThemeVar("borderColor-Admonition-note");
$backgroundColor-Admonition-tip: createThemeVar("backgroundColor-Admonition-tip");
$borderColor-Admonition-tip: createThemeVar("borderColor-Admonition-tip");

// Variables for @layer section - HorizontalRule
$borderColor-HorizontalRule: createThemeVar("borderColor-HorizontalRule");
$borderStyle-HorizontalRule: createThemeVar("borderStyle-HorizontalRule");
$borderWidth-HorizontalRule: createThemeVar("borderWidth-HorizontalRule");

@layer components {
  .markdownContent {
    padding-top: $paddingTop-MarkDown;
    padding-bottom: $paddingBottom-MarkDown;
    background-color: $backgroundColor-MarkDown;
    min-width: 0;
    width: 100%;
    @include t.textVars($themeVars, "Text");

    .markdown {
      $component: "Text";
      $variantName: "Text-markdown";
      $themeVars: t.composePaddingVars($themeVars, variantName);
      $themeVars: t.composeBorderVars($themeVars, $variantName);
      $themeVars: t.composeTextVars($themeVars, $variantName, $component);
      @include t.paddingVars($themeVars, $variantName);
      @include t.borderVars($themeVars, $variantName);
      @include t.textVars($themeVars, $variantName);
      margin-top: $marginTop-Text-markdown;
      margin-bottom: $marginBottom-Text-markdown;
      margin-left: $marginLeft-Text-markdown;
      margin-right: $marginRight-Text-markdown;
      overflow: visible;
      display: block;
    }

    // --- Additional Heading styles
    h1 {
      margin-top: $marginTop-H1-markdown !important;
      margin-bottom: $marginBottom-H1-markdown !important;
      font-size: $fontSize-H1-markdown !important;
    }

    h2 {
      margin-top: $marginTop-H2-markdown !important;
      margin-bottom: $marginBottom-H2-markdown !important;
    }

    h3 {
      margin-top: $marginTop-H3-markdown !important;
      margin-bottom: $marginBottom-H3-markdown !important;
    }

    h4 {
      margin-top: $marginTop-H4-markdown !important;
      margin-bottom: $marginBottom-H4-markdown !important;
    }

    h5 {
      margin-top: $marginTop-H5-markdown !important;
      margin-bottom: $marginBottom-H5-markdown !important;
    }

    h6 {
      margin-top: $marginTop-H6-markdown !important;
      margin-bottom: $marginBottom-H6-markdown !important;
    }

    // --- Image
    .block {
      margin-top: $marginTop-Image-markdown;
      margin-bottom: $marginBottom-Image-markdown;
      margin-left: $marginLeft-Image-markdown;
      margin-right: $marginRight-Image-markdown;
    }

    // --- Blockquote

    .blockquote {
      position: relative;
      margin-top: $marginTop-Blockquote;
      margin-bottom: $marginBottom-Blockquote;
      background-color: $backgroundColor-Blockquote;

      &::before {
        background-color: $color-accent-Blockquote;
        position: absolute;
        top: 0;
        left: 0;
        display: block;
        content: "";
        height: 100%;
        width: $width-accent-Blockquote;
      }
    }

    .blockquoteContainer {
      @include t.borderVars($themeVars, "Blockquote");
      @include t.paddingVars($themeVars, "Blockquote");
    }

    .admonitionBlockquote {
      margin-top: $marginTop-Admonition;
      margin-bottom: $marginBottom-Admonition;
      background-color: $backgroundColor-Admonition;
      border-radius: $borderRadius-Admonition;
      @include t.borderVars($themeVars, "Admonition");
      @include t.paddingVars($themeVars, "Admonition");

      &.info {
        background-color: $backgroundColor-Admonition-info;
        border-color: $borderColor-Admonition-info;
      }
      &.warning {
        background-color: $backgroundColor-Admonition-warning;
        border-color: $borderColor-Admonition-warning;
      }
      &.danger {
        background-color: $backgroundColor-Admonition-danger;
        border-color: $borderColor-Admonition-danger;
      }
      &.note {
        background-color: $backgroundColor-Admonition-note;
        border-color: $borderColor-Admonition-note;
      }
      &.tip {
        background-color: $backgroundColor-Admonition-tip;
        border-color: $borderColor-Admonition-tip;
      }
    }

    .admonitionContainer {
      padding: 0.5rem;
      display: flex;
      align-items: flex-start;
    }

    .admonitionIcon {
      font-size: $size-icon-Admonition;
      line-height: 1;
    }

    .admonitionContent {
      margin-left: $marginLeft-Admonition-content;
      flex: 1;
      min-width: 0;
    }

    .admonitionBlockquote {
      .admonitionContent {
        [class*="text_"][class*="markdown_"],
        ul,
        ol {
          margin-top: 0;
          margin-bottom: 0;
        }
      }
    }

    .horizontalRule {
      border-top-color: $borderColor-HorizontalRule;
      border-top-style: $borderStyle-HorizontalRule;
      border-top-width: $borderWidth-HorizontalRule;
    }

    li:has(> input[type="checkbox"]),
    li:has(> input[type="checkbox"]) {
      display: flex;
      align-items: flex-start;

      > input[type="checkbox"] {
        margin-right: 8px;
        margin-top: 4px;
        flex-shrink: 0;
      }
    }

    // First element should have no top margin
    > *:first-child {
      margin-top: 0;
    }

    // Last element should have no bottom margin
    > *:last-child {
      margin-bottom: 0;
    }

    // --- Table
    .tableScrollContainer {
      overflow-x: auto;
      width: 100%;
    }

    // --- Details adornment
    .detailsAdornment {
      margin-top: $marginTop-Admonition;
      margin-bottom: $marginBottom-Admonition;
      border-radius: $borderRadius-Admonition;
      background-color: $backgroundColor-Admonition;
      @include t.borderVars($themeVars, "Admonition");

      // Override ExpandableItem styles for better integration
      :global(.summary) {
        padding: 0.5rem 1rem;
        font-weight: 600; // Make summary text bold
      }

      :global(.content) {
        padding: 0 1rem 0.5rem 1rem;
      }
    }
  }

  // --- UnorderedList
  /*

  $paddingLeft-UnorderedList: createThemeVar("paddingLeft-UnorderedList");

  // the basic <ul> and <ol> styles are the same in tabler.io too
  .unorderedList {
    list-style-type: revert;
    list-style-position: outside;
    padding-left: $paddingLeft-UnorderedList;
  }

  // --- OrderedList
  $paddingLeft-OrderedList: createThemeVar("paddingLeft-OrderedList");

  // the basic <ul> and <ol> styles are the same in tabler.io too
  .orderedList {
    list-style-type: revert;
    list-style-position: outside;
    padding-left: $paddingLeft-OrderedList;
  }

  // --- ListItem

  $paddingLeft-ListItem: createThemeVar("paddingLeft-ListItem");
  $color-marker-ListItem: createThemeVar("color-marker-ListItem");

  .listItem {
    padding-left: $paddingLeft-ListItem;
  }

  .listItem::marker {
    color: $color-marker-ListItem;
  }
  */
}

// --- We export the theme variables to add them to the component renderer
:export {
  themeVars: t.json-stringify($themeVars);
}
