@use "../../components-core/theming/themes" as t;

// --- This code snippet is required to collect the theme variables used in this module
$themeVars: ();
@function createThemeVar($componentVariable) {
  $themeVars: t.appendThemeVar($themeVars, $componentVariable) !global;
  @return t.getThemeVar($themeVars, $componentVariable);
}


// --- Defaults for Markdown component

.markdownContent {
  // Common spacing for block elements
  h1, h2, h3, h4, h5, h6, p, ul, ol, table, blockquote, hr {
    margin-top: 1em;
    margin-bottom: .5;
  }

  // First element should have no top margin
  > *:first-child {
    margin-top: 0;
  }

  // Last element should have no bottom margin
  > *:last-child {
    margin-bottom: 0;
  }

  // Specific margins for horizontal rule
  hr {
    border: 0;
    height: 1px;
    background-color: #ddd;
    margin: 1.5em 0;
  }
}

// --- HorizontalRule

$borderColor-HorizontalRule: createThemeVar("borderColor-HorizontalRule");
$borderWidth-HorizontalRule: createThemeVar("borderWidth-HorizontalRule");
$borderStyle-HorizontalRule: createThemeVar("borderStyle-HorizontalRule");

.horizontalRule {
  border: $borderWidth-HorizontalRule $borderStyle-HorizontalRule $borderColor-HorizontalRule;
}

$color-bg-Blockquote: createThemeVar("color-bg-Blockquote");
$accent-Blockquote: createThemeVar("accent-Blockquote");
$borderRadius-Blockquote: createThemeVar("borderRadius-Blockquote");
$boxShadow-Blockquote: createThemeVar("boxShadow-Blockquote");
$padding-Blockquote: createThemeVar("padding-Blockquote");
$margin-Blockquote: createThemeVar("margin-Blockquote");

// --- Blockquote

.blockquote {
  position: relative;
  border-radius: $borderRadius-Blockquote;
  background-color: $color-bg-Blockquote;
  box-shadow: $boxShadow-Blockquote;
  padding: $padding-Blockquote;
  margin-top: $margin-Blockquote;
  margin-bottom: $margin-Blockquote;

  &::before {
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    content: "";
    height: 100%;
    width: 2px;
    background-color: $accent-Blockquote;
  }
}

$color-bg-Admonition: createThemeVar("color-bg-Admonition");
$color-text-Admonition: createThemeVar("color-text-Admonition");
$size-icon-Admonition: createThemeVar("size-icon-Admonition");


.admonitionBlockquote {
  position: relative;
  border-radius: $borderRadius-Blockquote;
  background-color: $color-bg-Admonition;
  box-shadow: $boxShadow-Blockquote;
  padding: $padding-Blockquote;
  margin: $margin-Blockquote;
  color: $color-text-Admonition;
}

.admonitionContainer {
  display: flex;
  align-items: flex-start;
  gap: 12px;
}

.admonitionIcon {
  font-size: $size-icon-Admonition;
  padding-top: 0;
  flex-shrink: 0;
}

.admonitionContent {
  flex: 1;
  min-width: 0;
}

// --- UnorderedList

$paddingLeft-UnorderedList: createThemeVar("paddingLeft-UnorderedList");

// the basic <ul> and <ol> styles are the same in tabler.io too 
.unorderedList {
  list-style-type: revert; 
  list-style-position: outside; 
  padding-left: $paddingLeft-UnorderedList;
}

// --- OrderedList

$paddingLeft-OrderedList: createThemeVar("paddingLeft-OrderedList");

// the basic <ul> and <ol> styles are the same in tabler.io too 
.orderedList {
  list-style-type: revert; 
  list-style-position: outside; 
  padding-left: $paddingLeft-OrderedList;
}

// --- ListItem

$paddingLeft-ListItem: createThemeVar("paddingLeft-ListItem");
$color-marker-ListItem: createThemeVar("color-marker-ListItem");

.listItem {
  padding-left: $paddingLeft-ListItem;
}

.listItem::marker {
  color: $color-marker-ListItem;
}

// -- Heading

$marginTop-HtmlHeading: createThemeVar("marginTop-HtmlHeading");
$marginBottom-HtmlHeading: createThemeVar("marginBottom-HtmlHeading");

.htmlHeading {
  margin-top: $marginTop-HtmlHeading;
  margin-bottom: $marginBottom-HtmlHeading;
}

// --- We export the theme variables to add them to the component renderer
:export {
  themeVars: t.json-stringify($themeVars);
}
