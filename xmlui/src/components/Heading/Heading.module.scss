@use "../../components-core/theming/themes" as t;

// --- This code snippet is required to collect the theme variables used in this module
$themeVars: ();
@function createThemeVar($componentVariable) {
  $themeVars: t.appendThemeVar($themeVars, $componentVariable) !global;
  @return t.getThemeVar($themeVars, $componentVariable);
}

$themeVars: t.composeBorderVars($themeVars, "H1");
$themeVars: t.composePaddingVars($themeVars, "H1");
$themeVars: t.composeTextVars($themeVars, "H1");
$themeVars: t.composeBorderVars($themeVars, "H2");
$themeVars: t.composePaddingVars($themeVars, "H2");
$themeVars: t.composeTextVars($themeVars, "H2");
$themeVars: t.composeBorderVars($themeVars, "H3");
$themeVars: t.composePaddingVars($themeVars, "H3");
$themeVars: t.composeTextVars($themeVars, "H3");
$themeVars: t.composeBorderVars($themeVars, "H4");
$themeVars: t.composePaddingVars($themeVars, "H4");
$themeVars: t.composeTextVars($themeVars, "H4");
$themeVars: t.composeBorderVars($themeVars, "H5");
$themeVars: t.composePaddingVars($themeVars, "H5");
$themeVars: t.composeTextVars($themeVars, "H5");
$themeVars: t.composeBorderVars($themeVars, "H6");
$themeVars: t.composePaddingVars($themeVars, "H6");
$themeVars: t.composeTextVars($themeVars, "H6");

@mixin heading($level) {
  @include t.paddingVars($themeVars, $level);
  @include t.borderVars($themeVars, $level);
  @include t.textVars($themeVars, $level);
  color: createThemeVar("Heading:textColor-#{$level}");
  letter-spacing: createThemeVar("Heading:letterSpacing-#{$level}");
  font-family: createThemeVar("Heading:fontFamily-#{$level}");
  font-weight: createThemeVar("Heading:fontWeight-#{$level}");
  margin-top: createThemeVar("marginTop-#{$level}"); // Intentionally omitting "Heading" inheritance
  margin-bottom: createThemeVar(
    "marginBottom-#{$level}"
  ); // Intentionally omitting "Heading" inheritance
  text-decoration-line: createThemeVar("Heading:textDecorationLine-#{$level}");
  text-decoration-color: createThemeVar("Heading:textDecorationColor-#{$level}");
  text-decoration-style: createThemeVar("Heading:textDecorationStyle-#{$level}");
  text-decoration-thickness: createThemeVar("Heading:textDecorationThickness-#{$level}");
  text-underline-offset: createThemeVar("Heading:textUnderlineOffset-#{$level}");
}

.heading {
  &.h1 {
    @include heading("H1");
  }
  &.h2 {
    @include heading("H2");
  }
  &.h3 {
    @include heading("H3");
  }
  &.h4 {
    @include heading("H4");
  }
  &.h5 {
    @include heading("H5");
  }
  &.h6 {
    @include heading("H6");
  }
}

/*
This is a Chromium based solution that is supported by most modern browsers.
See this source for details: https://css-tricks.com/line-clampin/
*/
.truncateOverflow {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.preserveLinebreaks {
  white-space: pre-wrap;
}

.noEllipsis {
  text-overflow: clip;
}

// --- We export the theme variables to add them to the component renderer
:export {
  themeVars: t.json-stringify($themeVars);
}
