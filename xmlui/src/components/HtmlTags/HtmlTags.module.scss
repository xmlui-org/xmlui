@use "../../components-core/theming/themes" as t;

// --- table

$themeVarsTable: ();

@function createThemeVarTable($componentVariable) {
  $themeVarsTable: t.appendThemeVar($themeVarsTable, $componentVariable) !global;
  @return t.getThemeVar($themeVarsTable, $componentVariable);
}

$textColor-HtmlTable: createThemeVarTable("textColor-HtmlTable");
$backgroundColor-HtmlTable: createThemeVarTable("backgroundColor-HtmlTable");
$fontFamily-HtmlTable: createThemeVarTable("fontFamily-HtmlTable");
$fontSize-HtmlTable: createThemeVarTable("fontSize-HtmlTable");
$fontWeight-HtmlTable: createThemeVarTable("fontWeight-HtmlTable");
$textTransform-HtmlTable: createThemeVarTable("textTransform-HtmlTable");
$marginTop-HtmlTable: createThemeVarTable("marginTop-HtmlTable");
$marginBottom-HtmlTable: createThemeVarTable("marginBottom-HtmlTable");
$width-HtmlTable: createThemeVarTable("width-HtmlTable");
$themeVarsTable: t.composeBorderVars($themeVarsTable, "HtmlTable");
$themeVarsTable: t.composePaddingVars($themeVarsTable, "HtmlTable");

.htmlTable {
  background-color: $backgroundColor-HtmlTable;
  color: $textColor-HtmlTable;
  font-family: $fontFamily-HtmlTable;
  font-size: $fontSize-HtmlTable;
  font-weight: $fontWeight-HtmlTable;
  text-transform: $textTransform-HtmlTable;
  margin-top: $marginTop-HtmlTable;
  margin-bottom: $marginBottom-HtmlTable;
  width: $width-HtmlTable;
  @include t.borderVars($themeVarsTable, "HtmlTable");
  @include t.paddingVars($themeVarsTable, "HtmlTable");
}

// --- thead

$themeVarsThead: ();

@function createThemeVarThead($componentVariable) {
  $themeVarsThead: t.appendThemeVar($themeVarsThead, $componentVariable) !global;
  @return t.getThemeVar($themeVarsThead, $componentVariable);
}

$backgroundColor-HtmlThead: createThemeVarThead("backgroundColor-HtmlThead");
$textColor-HtmlThead: createThemeVarThead("textColor-HtmlThead");
$fontWeight-HtmlThead: createThemeVarThead("fontWeight-HtmlThead");
$fontSize-HtmlThead: createThemeVarThead("fontSize-HtmlThead");
$textTransform-HtmlThead: createThemeVarThead("textTransform-HtmlThead");
$themeVarsThead: t.composeBorderVars($themeVarsThead, "HtmlThead");
$themeVarsThead: t.composePaddingVars($themeVarsThead, "HtmlThead");

.htmlThead {
  background-color: $backgroundColor-HtmlThead;
  color: $textColor-HtmlThead;
  font-weight: $fontWeight-HtmlThead;
  font-size: $fontSize-HtmlThead;
  text-transform: $textTransform-HtmlThead;
  @include t.borderVars($themeVarsThead, "HtmlThead");
  @include t.paddingVars($themeVarsThead, "HtmlThead");
}

// --- tbody

$themeVarsTbody: ();

@function createThemeVarTbody($componentVariable) {
  $themeVarsTbody: t.appendThemeVar($themeVarsTbody, $componentVariable) !global;
  @return t.getThemeVar($themeVarsTbody, $componentVariable);
}

$backgroundColor-HtmlTbody: createThemeVarTbody("backgroundColor-HtmlTbody");
$textColor-HtmlTbody: createThemeVarTbody("textColor-HtmlTbody");
$textAlign-HtmlTbody: createThemeVarTbody("textAlign-HtmlTbody");
$verticalAlign-HtmlTbody: createThemeVarTbody("verticalAlign-HtmlTbody");
$textTransform-HtmlTbody: createThemeVarTbody("textTransform-HtmlTbody");

.htmlTbody {
  background-color: $backgroundColor-HtmlTbody;
  color: $textColor-HtmlTbody;
  text-align: $textAlign-HtmlTbody;
  vertical-align: $verticalAlign-HtmlTbody;
  text-transform: $textTransform-HtmlTbody;
}

// --- tfoot

$themeVarsTfoot: ();

@function createThemeVarTfoot($componentVariable) {
  $themeVarsTfoot: t.appendThemeVar($themeVarsTfoot, $componentVariable) !global;
  @return t.getThemeVar($themeVarsTfoot, $componentVariable);
}

$backgroundColor-HtmlTfoot: createThemeVarTfoot("backgroundColor-HtmlTfoot");
$textColor-HtmlTfoot: createThemeVarTfoot("textColor-HtmlTfoot");

.htmlTfoot {
  background-color: $backgroundColor-HtmlTfoot;
  color: $textColor-HtmlTfoot;
}

// --- th

$themeVarsTh: ();

@function createThemeVarTh($componentVariable) {
  $themeVarsTh: t.appendThemeVar($themeVarsTh, $componentVariable) !global;
  @return t.getThemeVar($themeVarsTh, $componentVariable);
}

$backgroundColor-HtmlTh: createThemeVarTh("backgroundColor-HtmlTh");
$textColor-HtmlTh: createThemeVarTh("textColor-HtmlTh");
$fontWeight-HtmlTh: createThemeVarTh("fontWeight-HtmlTh");
$fontSize-HtmlTh: createThemeVarTh("fontSize-HtmlTh");
$backgroundColor-HtmlTh--hover: createThemeVarTh("backgroundColor-HtmlTh--hover");
$themeVarsTh: t.composeBorderVars($themeVarsTh, "HtmlTh");
$themeVarsTh: t.composePaddingVars($themeVarsTh, "HtmlTh");

.htmlTh {
  background-color: $backgroundColor-HtmlTh;
  color: $textColor-HtmlTh;
  font-weight: $fontWeight-HtmlTh;
  font-size: $fontSize-HtmlTh;
  @include t.borderVars($themeVarsTh, "HtmlTh");
  @include t.paddingVars($themeVarsTh, "HtmlTh");

  &:hover {
    background-color: $backgroundColor-HtmlTh--hover;
  }
}

// --- tr

$themeVarsTr: ();

@function createThemeVarTr($componentVariable) {
  $themeVarsTr: t.appendThemeVar($themeVarsTr, $componentVariable) !global;
  @return t.getThemeVar($themeVarsTr, $componentVariable);
}

$backgroundColor-HtmlTr: createThemeVarTr("backgroundColor-HtmlTr");
$backgroundColor-HtmlTr--hover: createThemeVarTr("backgroundColor-HtmlTr--hover");
$backgroundColor-even-HtmlTr: createThemeVarTr("backgroundColor-even-HtmlTr");
$textColor-HtmlTr: createThemeVarTr("textColor-HtmlTr");
$textColor-HtmlTr--hover: createThemeVarTr("textColor-HtmlTr--hover");
$fontSize-HtmlTr: createThemeVarTr("fontSize-HtmlTr");
$fontWeight-HtmlTr: createThemeVarTr("fontWeight-HtmlTr");
$themeVarsTr: t.composeBorderVars($themeVarsTr, "HtmlTr");

.htmlTr {
  background-color: $backgroundColor-HtmlTr;
  color: $textColor-HtmlTr;
  font-weight: $fontWeight-HtmlTr;
  font-size: $fontSize-HtmlTr;
  @include t.borderVars($themeVarsTr, "HtmlTr");

  &:nth-child(even) {
    background-color: $backgroundColor-even-HtmlTr;
  }

  // Apply hover effect for rows with mixed th, td elements
  &:hover {
    background-color: $backgroundColor-HtmlTr--hover;
    color: $textColor-HtmlTr--hover;
  }

  // Remove hover effect for rows with only th elements
  &:hover:not(:has(:not(th))) {
    background-color: initial;
  }
}

// --- td

$themeVarsTd: ();

@function createThemeVarTd($componentVariable) {
  $themeVarsTd: t.appendThemeVar($themeVarsTd, $componentVariable) !global;
  @return t.getThemeVar($themeVarsTd, $componentVariable);
}

$backgroundColor-HtmlTd: createThemeVarTd("backgroundColor-HtmlTd");
$text-align-HtmlTd: createThemeVarTd("text-align-HtmlTd");
$verticalAlign-HtmlTd: createThemeVarTd("verticalAlign-HtmlTd");
$fontSize-HtmlTd: createThemeVarTd("fontSize-HtmlTd");
$fontWeight-HtmlTd: createThemeVarTd("fontWeight-HtmlTd");
$themeVarsTd: t.composeBorderVars($themeVarsTd, "HtmlTd");
$themeVarsTd: t.composePaddingVars($themeVarsTd, "HtmlTd");

.htmlTd {
  background-color: $backgroundColor-HtmlTd;
  text-align: $text-align-HtmlTd;
  vertical-align: $verticalAlign-HtmlTd;
  font-size: $fontSize-HtmlTd;
  font-weight: $fontWeight-HtmlTd;
  @include t.borderVars($themeVarsTd, "HtmlTd");
  @include t.paddingVars($themeVarsTd, "HtmlTd");
}

// --- List styling (for both ul and ol)

$themeVarsList: ();

@function createThemeVarList($componentVariable) {
  $themeVarsList: t.appendThemeVar($themeVarsList, $componentVariable) !global;
  @return t.getThemeVar($themeVarsList, $componentVariable);
}

$themeVarsList: t.composeBorderVars($themeVarsList, "HtmlOl");
$themeVarsList: t.composePaddingVars($themeVarsList, "HtmlOl");
$marginTop-HtmlOl: createThemeVarList("marginTop-HtmlOl");
$marginBottom-HtmlOl: createThemeVarList("marginBottom-HtmlOl");

$themeVarsList: t.composeBorderVars($themeVarsList, "HtmlUl");
$themeVarsList: t.composePaddingVars($themeVarsList, "HtmlUl");
$marginTop-HtmlUl: createThemeVarList("marginTop-HtmlUl");
$marginBottom-HtmlUl: createThemeVarList("marginBottom-HtmlUl");

$themeVarsList: t.composeBorderVars($themeVarsList, "HtmlLi");
$themeVarsList: t.composePaddingVars($themeVarsList, "HtmlLi");
$marginLeft-HtmlLi: createThemeVarList("marginLeft-HtmlLi");
$marginTop-HtmlLi: createThemeVarList("marginTop-HtmlLi");
$marginBottom-HtmlLi: createThemeVarList("marginBottom-HtmlLi");
$listStyleType-HtmlLi: createThemeVarList("listStyleType-HtmlLi");

// Apply to both ul and ol elements
.htmlUl {
  margin-top: $marginTop-HtmlUl;
  margin-bottom: $marginBottom-HtmlUl;
  @include t.borderVars($themeVarsList, "HtmlUl");
  @include t.paddingVars($themeVarsList, "HtmlUl");
}

.htmlOl {
  margin-top: $marginTop-HtmlOl;
  margin-bottom: $marginBottom-HtmlOl;
  @include t.borderVars($themeVarsList, "HtmlOl");
  @include t.paddingVars($themeVarsList, "HtmlOl");
}

.htmlLi {
  margin-top: $marginTop-HtmlLi;
  margin-bottom: $marginBottom-HtmlLi;
  list-style-type: $listStyleType-HtmlLi;
  margin-left: $marginLeft-HtmlLi;
  @include t.borderVars($themeVarsList, "HtmlLi");
  @include t.paddingVars($themeVarsList, "HtmlLi");
}

/*
// Compress when nested
li .htmlUl,
li .htmlOl {
  margin-top: 0;
  margin-bottom: 0;
}
*/

// --- Heading styling
$themeVarsHeading: ();

@function createThemeVarHeading($componentVariable) {
  $themeVarsHeading: t.appendThemeVar($themeVarsHeading, $componentVariable) !global;
  @return t.getThemeVar($themeVarsHeading, $componentVariable);
}

$marginTop-HtmlHeading: createThemeVarHeading("marginTop-HtmlHeading");
$marginBottom-HtmlHeading: createThemeVarHeading("marginBottom-HtmlHeading");

.htmlH1,
.htmlH2,
.htmlH3,
.htmlH4,
.htmlH5,
.htmlH6 {
  margin-top: $marginTop-HtmlHeading;
  margin-bottom: $marginBottom-HtmlHeading;
}

// --- Video

$themeVarsVideo: ();

@function createThemeVarVideo($componentVariable) {
  $themeVarsVideo: t.appendThemeVar($themeVarsVideo, $componentVariable) !global;
  @return t.getThemeVar($themeVarsVideo, $componentVariable);
}

$marginTop-HtmlVideo: createThemeVarVideo("marginTop-HtmlVideo");
$marginBottom-HtmlVideo: createThemeVarVideo("marginBottom-HtmlVideo");

.htmlVideo {
  margin-top: $marginTop-HtmlVideo;
  margin-bottom: $marginBottom-HtmlVideo;
}

// --- Details

$themeVarsDetails: ();

@function createThemeVarDetails($componentVariable) {
  $themeVarsDetails: t.appendThemeVar($themeVarsDetails, $componentVariable) !global;
  @return t.getThemeVar($themeVarsDetails, $componentVariable);
}

$themeVarsDetails: t.composeBorderVars($themeVarsDetails, "HtmlDetails");
$themeVarsDetails: t.composePaddingVars($themeVarsDetails, "HtmlDetails");
$marginTop-HtmlDetails: createThemeVarDetails("marginTop-HtmlDetails");
$marginBottom-HtmlDetails: createThemeVarDetails("marginBottom-HtmlDetails");

.htmlDetails {
  margin-top: $marginTop-HtmlDetails;
  margin-bottom: $marginBottom-HtmlDetails;
  @include t.borderVars($themeVarsDetails, "HtmlDetails");
  @include t.paddingVars($themeVarsDetails, "HtmlDetails");
}

// --- Details

$themeVarsDetails: ();

@function createThemeVarDetails($componentVariable) {
  $themeVarsDetails: t.appendThemeVar($themeVarsDetails, $componentVariable) !global;
  @return t.getThemeVar($themeVarsDetails, $componentVariable);
}

$marginTop-HtmlDetails: createThemeVarDetails("marginTop-HtmlDetails");
$marginBottom-HtmlDetails: createThemeVarDetails("marginBottom-HtmlDetails");

.htmlDetails {
  margin-top: $marginTop-HtmlDetails;
  margin-bottom: $marginBottom-HtmlDetails;
}

// --- Image

$themeVarsImage: ();

@function createThemeVarImage($componentVariable) {
  $themeVarsImage: t.appendThemeVar($themeVarsImage, $componentVariable) !global;
  @return t.getThemeVar($themeVarsImage, $componentVariable);
}

$themeVarsImage: t.composeBorderVars($themeVarsImage, "HtmlImage");
$themeVarsImage: t.composePaddingVars($themeVarsImage, "HtmlImage");
$width-htmlImage: createThemeVarImage("width-HtmlImage");
$height-htmlImage: createThemeVarImage("height-HtmlImage");

.htmlImage {
  width: $width-htmlImage;
  height: $height-htmlImage;
  @include t.borderVars($themeVarsImage, "HtmlImage");
  @include t.paddingVars($themeVarsImage, "HtmlImage");
}

// --- We export the theme variables to add them to the component renderer
:export {
  themeVarsTable: t.json-stringify($themeVarsTable);
  themeVarsThead: t.json-stringify($themeVarsThead);
  themeVarsTbody: t.json-stringify($themeVarsTbody);
  themeVarsTfoot: t.json-stringify($themeVarsTfoot);
  themeVarsTh: t.json-stringify($themeVarsTh);
  themeVarsTr: t.json-stringify($themeVarsTr);
  themeVarsTd: t.json-stringify($themeVarsTd);
  themeVarsList: t.json-stringify($themeVarsList);
  themeVarsHeading: t.json-stringify($themeVarsHeading);
  themeVarsVideo: t.json-stringify($themeVarsVideo);
  themeVarsDetails: t.json-stringify($themeVarsDetails);
}
