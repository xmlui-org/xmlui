@use "../../components-core/theming/themes" as t;

// --- This code snippet is required to collect the theme variables used in this module
$themeVars: (
);

@function createThemeVar($componentVariable) {
  $themeVars: t.appendThemeVar($themeVars, $componentVariable) !global;
  @return t.getThemeVar($themeVars, $componentVariable);
}

$componentName: "TextBox";
$themeVars: t.composePaddingVars($themeVars, $componentName);

$backgroundColor-TextBox--disabled: createThemeVar("Input:backgroundColor-#{$componentName}--disabled");

$borderRadius-TextBox--default: createThemeVar("Input:borderRadius-#{$componentName}--default");
$borderRadius-TextBox--error: createThemeVar("Input:borderRadius-#{$componentName}--error");
$borderRadius-TextBox--warning: createThemeVar("Input:borderRadius-#{$componentName}--warning");
$borderRadius-TextBox--success: createThemeVar("Input:borderRadius-#{$componentName}--success");

// Variables for default variant
$borderColor-TextBox--default: createThemeVar("Input:borderColor-#{$componentName}--default");
$borderWidth-TextBox--default: createThemeVar("Input:borderWidth-#{$componentName}--default");
$borderStyle-TextBox--default: createThemeVar("Input:borderStyle-#{$componentName}--default");
$fontSize-TextBox--default: createThemeVar("Input:fontSize-#{$componentName}--default");
$backgroundColor-TextBox--default: createThemeVar("Input:backgroundColor-#{$componentName}--default");
$boxShadow-TextBox--default: createThemeVar("Input:boxShadow-#{$componentName}--default");
$textColor-TextBox--default: createThemeVar("Input:textColor-#{$componentName}--default");
$borderColor-TextBox--default--hover: createThemeVar("Input:borderColor-#{$componentName}--default--hover");
$backgroundColor-TextBox--default--hover: createThemeVar("Input:backgroundColor-#{$componentName}--default--hover");
$boxShadow-TextBox--default--hover: createThemeVar("Input:boxShadow-#{$componentName}--default--hover");
$textColor-TextBox--default--hover: createThemeVar("Input:textColor-#{$componentName}--default--hover");
$borderColor-TextBox--default--focus: createThemeVar("Input:borderColor-#{$componentName}--default--focus");
$backgroundColor-TextBox--default--focus: createThemeVar("Input:backgroundColor-#{$componentName}--default--focus");
$boxShadow-TextBox--default--focus: createThemeVar("Input:boxShadow-#{$componentName}--default--focus");
$textColor-TextBox--default--focus: createThemeVar("Input:textColor-#{$componentName}--default--focus");
$outlineWidth-TextBox--default--focus: createThemeVar("Input:outlineWidth-#{$componentName}--default--focus");
$outlineColor-TextBox--default--focus: createThemeVar("Input:outlineColor-#{$componentName}--default--focus");
$outlineStyle-TextBox--default--focus: createThemeVar("Input:outlineStyle-#{$componentName}--default--focus");
$outlineOffset-TextBox--default--focus: createThemeVar("Input:outlineOffset-#{$componentName}--default--focus");
$textColor-placeholder-TextBox--default: createThemeVar("Input:textColor-placeholder-#{$componentName}--default");
$fontSize-placeholder-TextBox--default: createThemeVar("Input:fontSize-placeholder-#{$componentName}--default");
$color-adornment-TextBox--default: createThemeVar("Input:color-adornment-#{$componentName}--default");

// Variables for error variant
$borderColor-TextBox--error: createThemeVar("Input:borderColor-#{$componentName}--error");
$borderWidth-TextBox--error: createThemeVar("Input:borderWidth-#{$componentName}--error");
$borderStyle-TextBox--error: createThemeVar("Input:borderStyle-#{$componentName}--error");
$fontSize-TextBox--error: createThemeVar("Input:fontSize-#{$componentName}--error");
$backgroundColor-TextBox--error: createThemeVar("Input:backgroundColor-#{$componentName}--error");
$boxShadow-TextBox--error: createThemeVar("Input:boxShadow-#{$componentName}--error");
$textColor-TextBox--error: createThemeVar("Input:textColor-#{$componentName}--error");
$borderColor-TextBox--error--hover: createThemeVar("Input:borderColor-#{$componentName}--error--hover");
$backgroundColor-TextBox--error--hover: createThemeVar("Input:backgroundColor-#{$componentName}--error--hover");
$boxShadow-TextBox--error--hover: createThemeVar("Input:boxShadow-#{$componentName}--error--hover");
$textColor-TextBox--error--hover: createThemeVar("Input:textColor-#{$componentName}--error--hover");
$borderColor-TextBox--error--focus: createThemeVar("Input:borderColor-#{$componentName}--error--focus");
$backgroundColor-TextBox--error--focus: createThemeVar("Input:backgroundColor-#{$componentName}--error--focus");
$boxShadow-TextBox--error--focus: createThemeVar("Input:boxShadow-#{$componentName}--error--focus");
$textColor-TextBox--error--focus: createThemeVar("Input:textColor-#{$componentName}--error--focus");
$outlineWidth-TextBox--error--focus: createThemeVar("Input:outlineWidth-#{$componentName}--error--focus");
$outlineColor-TextBox--error--focus: createThemeVar("Input:outlineColor-#{$componentName}--error--focus");
$outlineStyle-TextBox--error--focus: createThemeVar("Input:outlineStyle-#{$componentName}--error--focus");
$outlineOffset-TextBox--error--focus: createThemeVar("Input:outlineOffset-#{$componentName}--error--focus");
$textColor-placeholder-TextBox--error: createThemeVar("Input:textColor-placeholder-#{$componentName}--error");
$fontSize-placeholder-TextBox--error: createThemeVar("Input:fontSize-placeholder-#{$componentName}--error");
$color-adornment-TextBox--error: createThemeVar("Input:color-adornment-#{$componentName}--error");

// Variables for warning variant
$borderColor-TextBox--warning: createThemeVar("Input:borderColor-#{$componentName}--warning");
$borderWidth-TextBox--warning: createThemeVar("Input:borderWidth-#{$componentName}--warning");
$borderStyle-TextBox--warning: createThemeVar("Input:borderStyle-#{$componentName}--warning");
$fontSize-TextBox--warning: createThemeVar("Input:fontSize-#{$componentName}--warning");
$backgroundColor-TextBox--warning: createThemeVar("Input:backgroundColor-#{$componentName}--warning");
$boxShadow-TextBox--warning: createThemeVar("Input:boxShadow-#{$componentName}--warning");
$textColor-TextBox--warning: createThemeVar("Input:textColor-#{$componentName}--warning");
$borderColor-TextBox--warning--hover: createThemeVar("Input:borderColor-#{$componentName}--warning--hover");
$backgroundColor-TextBox--warning--hover: createThemeVar("Input:backgroundColor-#{$componentName}--warning--hover");
$boxShadow-TextBox--warning--hover: createThemeVar("Input:boxShadow-#{$componentName}--warning--hover");
$textColor-TextBox--warning--hover: createThemeVar("Input:textColor-#{$componentName}--warning--hover");
$borderColor-TextBox--warning--focus: createThemeVar("Input:borderColor-#{$componentName}--warning--focus");
$backgroundColor-TextBox--warning--focus: createThemeVar("Input:backgroundColor-#{$componentName}--warning--focus");
$boxShadow-TextBox--warning--focus: createThemeVar("Input:boxShadow-#{$componentName}--warning--focus");
$textColor-TextBox--warning--focus: createThemeVar("Input:textColor-#{$componentName}--warning--focus");
$outlineWidth-TextBox--warning--focus: createThemeVar("Input:outlineWidth-#{$componentName}--warning--focus");
$outlineColor-TextBox--warning--focus: createThemeVar("Input:outlineColor-#{$componentName}--warning--focus");
$outlineStyle-TextBox--warning--focus: createThemeVar("Input:outlineStyle-#{$componentName}--warning--focus");
$outlineOffset-TextBox--warning--focus: createThemeVar("Input:outlineOffset-#{$componentName}--warning--focus");
$textColor-placeholder-TextBox--warning: createThemeVar("Input:textColor-placeholder-#{$componentName}--warning");
$fontSize-placeholder-TextBox--warning: createThemeVar("Input:fontSize-placeholder-#{$componentName}--warning");
$color-adornment-TextBox--warning: createThemeVar("Input:color-adornment-#{$componentName}--warning");

// Variables for success variant
$borderColor-TextBox--success: createThemeVar("Input:borderColor-#{$componentName}--success");
$borderWidth-TextBox--success: createThemeVar("Input:borderWidth-#{$componentName}--success");
$borderStyle-TextBox--success: createThemeVar("Input:borderStyle-#{$componentName}--success");
$fontSize-TextBox--success: createThemeVar("Input:fontSize-#{$componentName}--success");
$backgroundColor-TextBox--success: createThemeVar("Input:backgroundColor-#{$componentName}--success");
$boxShadow-TextBox--success: createThemeVar("Input:boxShadow-#{$componentName}--success");
$textColor-TextBox--success: createThemeVar("Input:textColor-#{$componentName}--success");
$borderColor-TextBox--success--hover: createThemeVar("Input:borderColor-#{$componentName}--success--hover");
$backgroundColor-TextBox--success--hover: createThemeVar("Input:backgroundColor-#{$componentName}--success--hover");
$boxShadow-TextBox--success--hover: createThemeVar("Input:boxShadow-#{$componentName}--success--hover");
$textColor-TextBox--success--hover: createThemeVar("Input:textColor-#{$componentName}--success--hover");
$borderColor-TextBox--success--focus: createThemeVar("Input:borderColor-#{$componentName}--success--focus");
$backgroundColor-TextBox--success--focus: createThemeVar("Input:backgroundColor-#{$componentName}--success--focus");
$boxShadow-TextBox--success--focus: createThemeVar("Input:boxShadow-#{$componentName}--success--focus");
$textColor-TextBox--success--focus: createThemeVar("Input:textColor-#{$componentName}--success--focus");
$outlineWidth-TextBox--success--focus: createThemeVar("Input:outlineWidth-#{$componentName}--success--focus");
$outlineColor-TextBox--success--focus: createThemeVar("Input:outlineColor-#{$componentName}--success--focus");
$outlineStyle-TextBox--success--focus: createThemeVar("Input:outlineStyle-#{$componentName}--success--focus");
$outlineOffset-TextBox--success--focus: createThemeVar("Input:outlineOffset-#{$componentName}--success--focus");
$textColor-placeholder-TextBox--success: createThemeVar("Input:textColor-placeholder-#{$componentName}--success");
$fontSize-placeholder-TextBox--success: createThemeVar("Input:fontSize-placeholder-#{$componentName}--success");
$color-adornment-TextBox--success: createThemeVar("Input:color-adornment-#{$componentName}--success");

// Variables for passwordToggle (not variant-specific)
$color-passwordToggle-TextBox: createThemeVar("Input:color-passwordToggle-#{$componentName}");
$paddingLeft-passwordToggle-TextBox: createThemeVar("Input:paddingLeft-passwordToggle-#{$componentName}");
$paddingRight-passwordToggle-TextBox: createThemeVar("Input:paddingRight-passwordToggle-#{$componentName}");
$color-passwordToggle-TextBox--hover: createThemeVar("Input:color-passwordToggle-#{$componentName}--hover");
$color-passwordToggle-TextBox--focus: createThemeVar("Input:color-passwordToggle-#{$componentName}--focus");

// Variables for @layer section
$gap-adornment-TextBox: createThemeVar("Input:gap-adornment-#{$componentName}");
$textColor-TextBox--disabled: createThemeVar("Input:textColor-#{$componentName}--disabled");
$borderColor-TextBox--disabled: createThemeVar("Input:borderColor-#{$componentName}--disabled");

// --- CSS properties of a particular TextBox variant
@mixin variant($variantName) {
  border-radius: createThemeVar("Input:borderRadius-#{$componentName}--#{$variantName}");
  border-color: createThemeVar("Input:borderColor-#{$componentName}--#{$variantName}");
  border-width: createThemeVar("Input:borderWidth-#{$componentName}--#{$variantName}");
  border-style: createThemeVar("Input:borderStyle-#{$componentName}--#{$variantName}");
  font-size: createThemeVar("Input:fontSize-#{$componentName}--#{$variantName}");

  background-color: createThemeVar("Input:backgroundColor-#{$componentName}--#{$variantName}");
  box-shadow: createThemeVar("Input:boxShadow-#{$componentName}--#{$variantName}");
  color: createThemeVar("Input:textColor-#{$componentName}--#{$variantName}");

  &:hover {
    border-color: createThemeVar("Input:borderColor-#{$componentName}--#{$variantName}--hover");
    background-color: createThemeVar("Input:backgroundColor-#{$componentName}--#{$variantName}--hover"
    );
    box-shadow: createThemeVar("Input:boxShadow-#{$componentName}--#{$variantName}--hover");
    color: createThemeVar("Input:textColor-#{$componentName}--#{$variantName}--hover");
  }

  &:focus-within {
    border-color: createThemeVar("Input:borderColor-#{$componentName}--#{$variantName}--focus");
    background-color: createThemeVar("Input:backgroundColor-#{$componentName}--#{$variantName}--focus"
    );
    box-shadow: createThemeVar("Input:boxShadow-#{$componentName}--#{$variantName}--focus");
    color: createThemeVar("Input:textColor-#{$componentName}--#{$variantName}--focus");
  }

  &:has(.input:focus-visible) {
    outline-width: createThemeVar("Input:outlineWidth-#{$componentName}--#{$variantName}--focus");
    outline-color: createThemeVar("Input:outlineColor-#{$componentName}--#{$variantName}--focus");
    outline-style: createThemeVar("Input:outlineStyle-#{$componentName}--#{$variantName}--focus");
    outline-offset: createThemeVar("Input:outlineOffset-#{$componentName}--#{$variantName}--focus");
  }

  .input {
    &::placeholder {
      color: createThemeVar("Input:textColor-placeholder-#{$componentName}--#{$variantName}");
      font-size: createThemeVar("Input:fontSize-placeholder-#{$componentName}--#{$variantName}");
    }
  }

  .adornment {
    color: createThemeVar("Input:color-adornment-#{$componentName}--#{$variantName}");
  }

  .passwordToggle {
    cursor: pointer;
    color: createThemeVar("Input:color-passwordToggle-#{$componentName}");
    padding-left: createThemeVar("Input:paddingLeft-passwordToggle-#{$componentName}");
    padding-right: createThemeVar("Input:paddingRight-passwordToggle-#{$componentName}");

    &:hover {
      color: createThemeVar("Input:color-passwordToggle-#{$componentName}--hover");
    }

    &:focus {
      color: createThemeVar("Input:color-passwordToggle-#{$componentName}--focus");
    }
  }
}

@layer components {
  .inputRoot {
    display: flex;
    align-items: center;
    gap: $gap-adornment-TextBox;
    width: 100%;
    border-style: solid;
    border-width: 1px;
    transition: background-color ease-in 0.1s;
    overflow: hidden;
    @include t.paddingVars($themeVars, $componentName);
    @include variant("default");

    &.error {
      @include variant("error");
    }

    &.warning {
      @include variant("warning");
    }

    &.valid {
      @include variant("success");
    }

    &:has(.input:is(:disabled)) {
      cursor: not-allowed;
      background-color: $backgroundColor-TextBox--disabled;
      color: $textColor-TextBox--disabled;
      border-color: $borderColor-TextBox--disabled;
    }

    .input {
      font-size: inherit;
      color: inherit;
      border: 0;
      outline: none !important;
      background-color: transparent;
      width: 100%;
      padding: 0;
      cursor: inherit;

      &::-ms-reveal {
        display: none;
      }

      // Remove default search input styles if type="search"
      &[type="search"]::-webkit-search-cancel-button,
      &[type="search"]::-webkit-search-decoration {
        -webkit-appearance: none;
        appearance: none;
      }
    }
  }

  .readOnly {
    cursor: default;
  }
}

// --- We export the theme variables to add them to the component renderer
:export {
  themeVars: t.json-stringify($themeVars);
}