@use "../../components-core/theming/themes" as t;

// --- This code snippet is required to collect the theme variables used in this module
$themeVars: (
);

@function createThemeVar($componentVariable) {
  $themeVars: t.appendThemeVar($themeVars, $componentVariable) !global;
  @return t.getThemeVar($themeVars, $componentVariable);
}

$componentName: "TextBox";
$themeVars: t.composePaddingVars($themeVars, $componentName);

$gapAdornmentSize: createThemeVar("Input:gap-adornment-TextBox");
$backgroundColorDisabled: createThemeVar("Input:backgroundColor-TextBox--disabled");
$textColorDisabled: createThemeVar("Input:textColor-TextBox--disabled");
$borderColorDisabled: createThemeVar("Input:borderColor-TextBox--disabled");

// Generic Input variables
$borderRadius-Input-TextBox: createThemeVar("Input:borderRadius-TextBox");
$borderColor-Input-TextBox: createThemeVar("Input:borderColor-TextBox");
$borderWidth-Input-TextBox: createThemeVar("Input:borderWidth-TextBox");
$borderStyle-Input-TextBox: createThemeVar("Input:borderStyle-TextBox");
$fontSize-Input-TextBox: createThemeVar("Input:fontSize-TextBox");
$backgroundColor-Input-TextBox: createThemeVar("Input:backgroundColor-TextBox");
$boxShadow-Input-TextBox: createThemeVar("Input:boxShadow-TextBox");
$textColor-Input-TextBox: createThemeVar("Input:textColor-TextBox");
$borderColor-Input-TextBox--hover: createThemeVar("Input:borderColor-TextBox--hover");
$backgroundColor-Input-TextBox--hover: createThemeVar("Input:backgroundColor-TextBox--hover");
$boxShadow-Input-TextBox--hover: createThemeVar("Input:boxShadow-TextBox--hover");
$textColor-Input-TextBox--hover: createThemeVar("Input:textColor-TextBox--hover");
$borderColor-Input-TextBox--focus: createThemeVar("Input:borderColor-TextBox--focus");
$backgroundColor-Input-TextBox--focus: createThemeVar("Input:backgroundColor-TextBox--focus");
$boxShadow-Input-TextBox--focus: createThemeVar("Input:boxShadow-TextBox--focus");
$textColor-Input-TextBox--focus: createThemeVar("Input:textColor-TextBox--focus");
$outlineWidth-Input-TextBox--focus: createThemeVar("Input:outlineWidth-TextBox--focus");
$outlineColor-Input-TextBox--focus: createThemeVar("Input:outlineColor-TextBox--focus");
$outlineStyle-Input-TextBox--focus: createThemeVar("Input:outlineStyle-TextBox--focus");
$outlineOffset-Input-TextBox--focus: createThemeVar("Input:outlineOffset-TextBox--focus");
$textColor-placeholder-Input-TextBox: createThemeVar("Input:textColor-placeholder-TextBox");
$fontSize-placeholder-Input-TextBox: createThemeVar("Input:fontSize-placeholder-TextBox");
$color-adornment-Input-TextBox: createThemeVar("Input:color-adornment-TextBox");
$color-passwordToggle-Input-TextBox: createThemeVar("Input:color-passwordToggle-TextBox");
$paddingLeft-passwordToggle-Input-TextBox: createThemeVar("Input:paddingLeft-passwordToggle-TextBox");
$paddingRight-passwordToggle-Input-TextBox: createThemeVar("Input:paddingRight-passwordToggle-TextBox");
$color-passwordToggle-Input-TextBox--hover: createThemeVar("Input:color-passwordToggle-TextBox--hover");
$color-passwordToggle-Input-TextBox--focus: createThemeVar("Input:color-passwordToggle-TextBox--focus");

// Default variant variables
$borderRadius-Input-TextBox-default: createThemeVar("Input:borderRadius-TextBox-default");
$borderColor-Input-TextBox-default: createThemeVar("Input:borderColor-TextBox-default");
$borderWidth-Input-TextBox-default: createThemeVar("Input:borderWidth-TextBox-default");
$borderStyle-Input-TextBox-default: createThemeVar("Input:borderStyle-TextBox-default");
$fontSize-Input-TextBox-default: createThemeVar("Input:fontSize-TextBox-default");
$backgroundColor-Input-TextBox-default: createThemeVar("Input:backgroundColor-TextBox-default");
$boxShadow-Input-TextBox-default: createThemeVar("Input:boxShadow-TextBox-default");
$textColor-Input-TextBox-default: createThemeVar("Input:textColor-TextBox-default");
$borderColor-Input-TextBox-default--hover: createThemeVar("Input:borderColor-TextBox-default--hover");
$backgroundColor-Input-TextBox-default--hover: createThemeVar("Input:backgroundColor-TextBox-default--hover");
$boxShadow-Input-TextBox-default--hover: createThemeVar("Input:boxShadow-TextBox-default--hover");
$textColor-Input-TextBox-default--hover: createThemeVar("Input:textColor-TextBox-default--hover");
$borderColor-Input-TextBox-default--focus: createThemeVar("Input:borderColor-TextBox-default--focus");
$backgroundColor-Input-TextBox-default--focus: createThemeVar("Input:backgroundColor-TextBox-default--focus");
$boxShadow-Input-TextBox-default--focus: createThemeVar("Input:boxShadow-TextBox-default--focus");
$textColor-Input-TextBox-default--focus: createThemeVar("Input:textColor-TextBox-default--focus");
$outlineWidth-Input-TextBox-default--focus: createThemeVar("Input:outlineWidth-TextBox-default--focus");
$outlineColor-Input-TextBox-default--focus: createThemeVar("Input:outlineColor-TextBox-default--focus");
$outlineStyle-Input-TextBox-default--focus: createThemeVar("Input:outlineStyle-TextBox-default--focus");
$outlineOffset-Input-TextBox-default--focus: createThemeVar("Input:outlineOffset-TextBox-default--focus");
$textColor-placeholder-Input-TextBox-default: createThemeVar("Input:textColor-placeholder-TextBox-default");
$fontSize-placeholder-Input-TextBox-default: createThemeVar("Input:fontSize-placeholder-TextBox-default");
$color-adornment-Input-TextBox-default: createThemeVar("Input:color-adornment-TextBox-default");

// Error variant variables
$borderRadius-Input-TextBox-error: createThemeVar("Input:borderRadius-TextBox-error");
$borderColor-Input-TextBox-error: createThemeVar("Input:borderColor-TextBox-error");
$borderWidth-Input-TextBox-error: createThemeVar("Input:borderWidth-TextBox-error");
$borderStyle-Input-TextBox-error: createThemeVar("Input:borderStyle-TextBox-error");
$fontSize-Input-TextBox-error: createThemeVar("Input:fontSize-TextBox-error");
$backgroundColor-Input-TextBox-error: createThemeVar("Input:backgroundColor-TextBox-error");
$boxShadow-Input-TextBox-error: createThemeVar("Input:boxShadow-TextBox-error");
$textColor-Input-TextBox-error: createThemeVar("Input:textColor-TextBox-error");
$borderColor-Input-TextBox-error--hover: createThemeVar("Input:borderColor-TextBox-error--hover");
$backgroundColor-Input-TextBox-error--hover: createThemeVar("Input:backgroundColor-TextBox-error--hover");
$boxShadow-Input-TextBox-error--hover: createThemeVar("Input:boxShadow-TextBox-error--hover");
$textColor-Input-TextBox-error--hover: createThemeVar("Input:textColor-TextBox-error--hover");
$borderColor-Input-TextBox-error--focus: createThemeVar("Input:borderColor-TextBox-error--focus");
$backgroundColor-Input-TextBox-error--focus: createThemeVar("Input:backgroundColor-TextBox-error--focus");
$boxShadow-Input-TextBox-error--focus: createThemeVar("Input:boxShadow-TextBox-error--focus");
$textColor-Input-TextBox-error--focus: createThemeVar("Input:textColor-TextBox-error--focus");
$outlineWidth-Input-TextBox-error--focus: createThemeVar("Input:outlineWidth-TextBox-error--focus");
$outlineColor-Input-TextBox-error--focus: createThemeVar("Input:outlineColor-TextBox-error--focus");
$outlineStyle-Input-TextBox-error--focus: createThemeVar("Input:outlineStyle-TextBox-error--focus");
$outlineOffset-Input-TextBox-error--focus: createThemeVar("Input:outlineOffset-TextBox-error--focus");
$textColor-placeholder-Input-TextBox-error: createThemeVar("Input:textColor-placeholder-TextBox-error");
$fontSize-placeholder-Input-TextBox-error: createThemeVar("Input:fontSize-placeholder-TextBox-error");
$color-adornment-Input-TextBox-error: createThemeVar("Input:color-adornment-TextBox-error");

// Warning variant variables
$borderRadius-Input-TextBox-warning: createThemeVar("Input:borderRadius-TextBox-warning");
$borderColor-Input-TextBox-warning: createThemeVar("Input:borderColor-TextBox-warning");
$borderWidth-Input-TextBox-warning: createThemeVar("Input:borderWidth-TextBox-warning");
$borderStyle-Input-TextBox-warning: createThemeVar("Input:borderStyle-TextBox-warning");
$fontSize-Input-TextBox-warning: createThemeVar("Input:fontSize-TextBox-warning");
$backgroundColor-Input-TextBox-warning: createThemeVar("Input:backgroundColor-TextBox-warning");
$boxShadow-Input-TextBox-warning: createThemeVar("Input:boxShadow-TextBox-warning");
$textColor-Input-TextBox-warning: createThemeVar("Input:textColor-TextBox-warning");
$borderColor-Input-TextBox-warning--hover: createThemeVar("Input:borderColor-TextBox-warning--hover");
$backgroundColor-Input-TextBox-warning--hover: createThemeVar("Input:backgroundColor-TextBox-warning--hover");
$boxShadow-Input-TextBox-warning--hover: createThemeVar("Input:boxShadow-TextBox-warning--hover");
$textColor-Input-TextBox-warning--hover: createThemeVar("Input:textColor-TextBox-warning--hover");
$borderColor-Input-TextBox-warning--focus: createThemeVar("Input:borderColor-TextBox-warning--focus");
$backgroundColor-Input-TextBox-warning--focus: createThemeVar("Input:backgroundColor-TextBox-warning--focus");
$boxShadow-Input-TextBox-warning--focus: createThemeVar("Input:boxShadow-TextBox-warning--focus");
$textColor-Input-TextBox-warning--focus: createThemeVar("Input:textColor-TextBox-warning--focus");
$outlineWidth-Input-TextBox-warning--focus: createThemeVar("Input:outlineWidth-TextBox-warning--focus");
$outlineColor-Input-TextBox-warning--focus: createThemeVar("Input:outlineColor-TextBox-warning--focus");
$outlineStyle-Input-TextBox-warning--focus: createThemeVar("Input:outlineStyle-TextBox-warning--focus");
$outlineOffset-Input-TextBox-warning--focus: createThemeVar("Input:outlineOffset-TextBox-warning--focus");
$textColor-placeholder-Input-TextBox-warning: createThemeVar("Input:textColor-placeholder-TextBox-warning");
$fontSize-placeholder-Input-TextBox-warning: createThemeVar("Input:fontSize-placeholder-TextBox-warning");
$color-adornment-Input-TextBox-warning: createThemeVar("Input:color-adornment-TextBox-warning");

// Success variant variables
$borderRadius-Input-TextBox-success: createThemeVar("Input:borderRadius-TextBox-success");
$borderColor-Input-TextBox-success: createThemeVar("Input:borderColor-TextBox-success");
$borderWidth-Input-TextBox-success: createThemeVar("Input:borderWidth-TextBox-success");
$borderStyle-Input-TextBox-success: createThemeVar("Input:borderStyle-TextBox-success");
$fontSize-Input-TextBox-success: createThemeVar("Input:fontSize-TextBox-success");
$backgroundColor-Input-TextBox-success: createThemeVar("Input:backgroundColor-TextBox-success");
$boxShadow-Input-TextBox-success: createThemeVar("Input:boxShadow-TextBox-success");
$textColor-Input-TextBox-success: createThemeVar("Input:textColor-TextBox-success");
$borderColor-Input-TextBox-success--hover: createThemeVar("Input:borderColor-TextBox-success--hover");
$backgroundColor-Input-TextBox-success--hover: createThemeVar("Input:backgroundColor-TextBox-success--hover");
$boxShadow-Input-TextBox-success--hover: createThemeVar("Input:boxShadow-TextBox-success--hover");
$textColor-Input-TextBox-success--hover: createThemeVar("Input:textColor-TextBox-success--hover");
$borderColor-Input-TextBox-success--focus: createThemeVar("Input:borderColor-TextBox-success--focus");
$backgroundColor-Input-TextBox-success--focus: createThemeVar("Input:backgroundColor-TextBox-success--focus");
$boxShadow-Input-TextBox-success--focus: createThemeVar("Input:boxShadow-TextBox-success--focus");
$textColor-Input-TextBox-success--focus: createThemeVar("Input:textColor-TextBox-success--focus");
$outlineWidth-Input-TextBox-success--focus: createThemeVar("Input:outlineWidth-TextBox-success--focus");
$outlineColor-Input-TextBox-success--focus: createThemeVar("Input:outlineColor-TextBox-success--focus");
$outlineStyle-Input-TextBox-success--focus: createThemeVar("Input:outlineStyle-TextBox-success--focus");
$outlineOffset-Input-TextBox-success--focus: createThemeVar("Input:outlineOffset-TextBox-success--focus");
$textColor-placeholder-Input-TextBox-success: createThemeVar("Input:textColor-placeholder-TextBox-success");
$fontSize-placeholder-Input-TextBox-success: createThemeVar("Input:fontSize-placeholder-TextBox-success");
$color-adornment-Input-TextBox-success: createThemeVar("Input:color-adornment-TextBox-success");

// --- CSS properties of a particular TextBox variant
@mixin variant($variantName) {
  @if $variantName == "default" {
    border-radius: $borderRadius-Input-TextBox-default;
    border-color: $borderColor-Input-TextBox-default;
    border-width: $borderWidth-Input-TextBox-default;
    border-style: $borderStyle-Input-TextBox-default;
    font-size: $fontSize-Input-TextBox-default;
    background-color: $backgroundColor-Input-TextBox-default;
    box-shadow: $boxShadow-Input-TextBox-default;
    color: $textColor-Input-TextBox-default;

    &:hover {
      border-color: $borderColor-Input-TextBox-default--hover;
      background-color: $backgroundColor-Input-TextBox-default--hover;
      box-shadow: $boxShadow-Input-TextBox-default--hover;
      color: $textColor-Input-TextBox-default--hover;
    }

    &:focus-within {
      border-color: $borderColor-Input-TextBox-default--focus;
      background-color: $backgroundColor-Input-TextBox-default--focus;
      box-shadow: $boxShadow-Input-TextBox-default--focus;
      color: $textColor-Input-TextBox-default--focus;
    }

    &:has(.input:focus-visible) {
      outline-width: $outlineWidth-Input-TextBox-default--focus;
      outline-color: $outlineColor-Input-TextBox-default--focus;
      outline-style: $outlineStyle-Input-TextBox-default--focus;
      outline-offset: $outlineOffset-Input-TextBox-default--focus;
    }

    .input {
      &::placeholder {
        color: $textColor-placeholder-Input-TextBox-default;
        font-size: $fontSize-placeholder-Input-TextBox-default;
      }
    }

    .adornment {
      color: $color-adornment-Input-TextBox-default;
    }
  } @else if $variantName == "error" {
    border-radius: $borderRadius-Input-TextBox-error;
    border-color: $borderColor-Input-TextBox-error;
    border-width: $borderWidth-Input-TextBox-error;
    border-style: $borderStyle-Input-TextBox-error;
    font-size: $fontSize-Input-TextBox-error;
    background-color: $backgroundColor-Input-TextBox-error;
    box-shadow: $boxShadow-Input-TextBox-error;
    color: $textColor-Input-TextBox-error;

    &:hover {
      border-color: $borderColor-Input-TextBox-error--hover;
      background-color: $backgroundColor-Input-TextBox-error--hover;
      box-shadow: $boxShadow-Input-TextBox-error--hover;
      color: $textColor-Input-TextBox-error--hover;
    }

    &:focus-within {
      border-color: $borderColor-Input-TextBox-error--focus;
      background-color: $backgroundColor-Input-TextBox-error--focus;
      box-shadow: $boxShadow-Input-TextBox-error--focus;
      color: $textColor-Input-TextBox-error--focus;
    }

    &:has(.input:focus-visible) {
      outline-width: $outlineWidth-Input-TextBox-error--focus;
      outline-color: $outlineColor-Input-TextBox-error--focus;
      outline-style: $outlineStyle-Input-TextBox-error--focus;
      outline-offset: $outlineOffset-Input-TextBox-error--focus;
    }

    .input {
      &::placeholder {
        color: $textColor-placeholder-Input-TextBox-error;
        font-size: $fontSize-placeholder-Input-TextBox-error;
      }
    }

    .adornment {
      color: $color-adornment-Input-TextBox-error;
    }
  } @else if $variantName == "warning" {
    border-radius: $borderRadius-Input-TextBox-warning;
    border-color: $borderColor-Input-TextBox-warning;
    border-width: $borderWidth-Input-TextBox-warning;
    border-style: $borderStyle-Input-TextBox-warning;
    font-size: $fontSize-Input-TextBox-warning;
    background-color: $backgroundColor-Input-TextBox-warning;
    box-shadow: $boxShadow-Input-TextBox-warning;
    color: $textColor-Input-TextBox-warning;

    &:hover {
      border-color: $borderColor-Input-TextBox-warning--hover;
      background-color: $backgroundColor-Input-TextBox-warning--hover;
      box-shadow: $boxShadow-Input-TextBox-warning--hover;
      color: $textColor-Input-TextBox-warning--hover;
    }

    &:focus-within {
      border-color: $borderColor-Input-TextBox-warning--focus;
      background-color: $backgroundColor-Input-TextBox-warning--focus;
      box-shadow: $boxShadow-Input-TextBox-warning--focus;
      color: $textColor-Input-TextBox-warning--focus;
    }

    &:has(.input:focus-visible) {
      outline-width: $outlineWidth-Input-TextBox-warning--focus;
      outline-color: $outlineColor-Input-TextBox-warning--focus;
      outline-style: $outlineStyle-Input-TextBox-warning--focus;
      outline-offset: $outlineOffset-Input-TextBox-warning--focus;
    }

    .input {
      &::placeholder {
        color: $textColor-placeholder-Input-TextBox-warning;
        font-size: $fontSize-placeholder-Input-TextBox-warning;
      }
    }

    .adornment {
      color: $color-adornment-Input-TextBox-warning;
    }
  } @else if $variantName == "success" {
    border-radius: $borderRadius-Input-TextBox-success;
    border-color: $borderColor-Input-TextBox-success;
    border-width: $borderWidth-Input-TextBox-success;
    border-style: $borderStyle-Input-TextBox-success;
    font-size: $fontSize-Input-TextBox-success;
    background-color: $backgroundColor-Input-TextBox-success;
    box-shadow: $boxShadow-Input-TextBox-success;
    color: $textColor-Input-TextBox-success;

    &:hover {
      border-color: $borderColor-Input-TextBox-success--hover;
      background-color: $backgroundColor-Input-TextBox-success--hover;
      box-shadow: $boxShadow-Input-TextBox-success--hover;
      color: $textColor-Input-TextBox-success--hover;
    }

    &:focus-within {
      border-color: $borderColor-Input-TextBox-success--focus;
      background-color: $backgroundColor-Input-TextBox-success--focus;
      box-shadow: $boxShadow-Input-TextBox-success--focus;
      color: $textColor-Input-TextBox-success--focus;
    }

    &:has(.input:focus-visible) {
      outline-width: $outlineWidth-Input-TextBox-success--focus;
      outline-color: $outlineColor-Input-TextBox-success--focus;
      outline-style: $outlineStyle-Input-TextBox-success--focus;
      outline-offset: $outlineOffset-Input-TextBox-success--focus;
    }

    .input {
      &::placeholder {
        color: $textColor-placeholder-Input-TextBox-success;
        font-size: $fontSize-placeholder-Input-TextBox-success;
      }
    }

    .adornment {
      color: $color-adornment-Input-TextBox-success;
    }
  }

  .passwordToggle {
    cursor: pointer;
    color: $color-passwordToggle-Input-TextBox;
    padding-left: $paddingLeft-passwordToggle-Input-TextBox;
    padding-right: $paddingRight-passwordToggle-Input-TextBox;

    &:hover {
      color: $color-passwordToggle-Input-TextBox--hover;
    }

    &:focus {
      color: $color-passwordToggle-Input-TextBox--focus;
    }
  }
}

@layer components {
  .inputRoot {
    display: flex;
    align-items: center;
    gap: $gapAdornmentSize;
    width: 100%;
    border-style: solid;
    border-width: 1px;
    transition: background-color ease-in 0.1s;
    overflow: hidden;
    @include t.paddingVars($themeVars, $componentName);
    @include variant("default");

    &.error {
      @include variant("error");
    }

    &.warning {
      @include variant("warning");
    }

    &.valid {
      @include variant("success");
    }

    &:has(.input:is(:disabled)) {
      cursor: not-allowed;
      background-color: $backgroundColorDisabled;
      color: $textColorDisabled;
      border-color: $borderColorDisabled;
    }

    .input {
      font-size: inherit;
      color: inherit;
      border: 0;
      outline: none !important;
      background-color: transparent;
      width: 100%;
      padding: 0;
      cursor: inherit;

      &::-ms-reveal {
        display: none;
      }

      // Remove default search input styles if type="search"
      &[type="search"]::-webkit-search-cancel-button,
      &[type="search"]::-webkit-search-decoration {
        -webkit-appearance: none;
        appearance: none;
      }
    }
  }

  .readOnly {
    cursor: default;
  }
}

// --- We export the theme variables to add them to the component renderer
:export {
  themeVars: t.json-stringify($themeVars);
}