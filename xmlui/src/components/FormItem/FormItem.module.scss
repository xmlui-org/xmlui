@use "../../components-core/theming/themes" as t;

// --- This code snippet is required to collect the theme variables used in this module
$themeVars: (
);

@function createThemeVar($componentVariable) {
  $themeVars: t.appendThemeVar($themeVars, $componentVariable) !global;
  @return t.getThemeVar($themeVars, $componentVariable);
}

// Variables for @layer section
$textColor-FormItemLabel: createThemeVar("textColor-FormItemLabel");
$fontFamily-FormItemLabel: createThemeVar("fontFamily-FormItemLabel");
$fontSize-FormItemLabel: createThemeVar("fontSize-FormItemLabel");
$fontWeight-FormItemLabel: createThemeVar("fontWeight-FormItemLabel");
$fontStyle-FormItemLabel: createThemeVar("fontStyle-FormItemLabel");
$textTransform-FormItemLabel: createThemeVar("textTransform-FormItemLabel");
$textColor-FormItemLabel-required: createThemeVar("textColor-FormItemLabel-required");
$fontSize-FormItemLabel-required: createThemeVar("fontSize-FormItemLabel-required");
$fontWeight-FormItemLabel-required: createThemeVar("fontWeight-FormItemLabel-required");
$fontStyle-FormItemLabel-required: createThemeVar("fontStyle-FormItemLabel-required");
$textTransform-FormItemLabel-required: createThemeVar("textTransform-FormItemLabel-required");
$textColor-FormItemLabel-requiredMark: createThemeVar("textColor-FormItemLabel-requiredMark");

// TODO: Add HelperText styles here, as HelperText React component is used only in FormItem

@layer components {
  .container {
    display: flex;
    width: 100%;
    flex-direction: column;
    align-items: start;
    gap: 0.5em;

    &.top {
      flex-direction: column;
      align-items: start;
      justify-content: center;
    }

    &.end {
      flex-direction: row-reverse;
      align-items: center;
      justify-content: start;
      gap: 0.5em;
    }

    &.bottom {
      flex-direction: column-reverse;
      align-items: start;
      justify-content: center;
    }

    &.start {
      flex-direction: row;
      align-items: center;
      justify-content: start;
      gap: 0.5em;
    }

    &.shrinkToLabel {
      width: fit-content;
    }

    .inputLabel {
      display: flex;
      color: $textColor-FormItemLabel;
      font-family: $fontFamily-FormItemLabel;
      font-size: $fontSize-FormItemLabel;
      font-weight: $fontWeight-FormItemLabel;
      font-style: $fontStyle-FormItemLabel;
      text-transform: $textTransform-FormItemLabel;
      user-select: none;
      cursor: pointer;
      word-break: normal;
      white-space: nowrap;

      &.disabled {
        cursor: not-allowed;
        color: t.$textColor--disabled;
      }

      &.labelBreak {
        white-space: normal;
        word-break: normal;
        overflow-wrap: break-word;
      }

      &.required {
        color: $textColor-FormItemLabel-required;
        font-size: $fontSize-FormItemLabel-required;
        font-weight: $fontWeight-FormItemLabel-required;
        font-style: $fontStyle-FormItemLabel-required;
        text-transform: $textTransform-FormItemLabel-required;
      }

      .requiredMark {
        margin-left: 0.2em;
        color: $textColor-FormItemLabel-requiredMark;
      }
    }
  }

  .itemWithLabel {
   display: flex;
   justify-content: center;
   align-items: center;
   flex-direction: column;
  }

  .helperTextContainer {
    width: 100%;
  }
}

// --- We export the theme variables to add them to the component renderer
:export {
  themeVars: t.json-stringify($themeVars);
}