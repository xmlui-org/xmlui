@use "../../components-core/theming/themes" as t;

// --- This code snippet is required to collect the theme variables used in this module
$themeVars: ();
@function createThemeVar($componentVariable) {
  $themeVars: t.appendThemeVar($themeVars, $componentVariable) !global;
  @return t.getThemeVar($themeVars, $componentVariable);
}

$componentName: "DatePicker";

// --- CSS properties of a particular Select variant
@mixin variant($variantName) {
  border-radius: createThemeVar("Input:borderRadius-#{$componentName}-#{$variantName}");
  border-color: createThemeVar("Input:borderColor-#{$componentName}-#{$variantName}");
  border-width: createThemeVar("Input:borderWidth-#{$componentName}-#{$variantName}");
  border-style: createThemeVar("Input:borderStyle-#{$componentName}-#{$variantName}");
  background-color: createThemeVar("Input:backgroundColor-#{$componentName}-#{$variantName}");
  box-shadow: createThemeVar("Input:boxShadow-#{$componentName}-#{$variantName}");
  color: createThemeVar("Input:textColor-#{$componentName}-#{$variantName}");
  padding: createThemeVar("Input:padding-#{$componentName}-#{$variantName}");

  &:hover {
    border-color: createThemeVar("Input:borderColor-#{$componentName}-#{$variantName}--hover");
    background-color: createThemeVar("Input:backgroundColor-#{$componentName}-#{$variantName}--hover");
    box-shadow: createThemeVar("Input:boxShadow-#{$componentName}-#{$variantName}--hover");
    color: createThemeVar("Input:textColor-#{$componentName}-#{$variantName}--hover");
  }

  &:focus {
    outline-width: createThemeVar('Input:outlineWidth-#{$componentName}-#{$variantName}--focus');
    outline-color: createThemeVar('Input:outlineColor-#{$componentName}-#{$variantName}--focus');
    outline-style: createThemeVar('Input:outlineStyle-#{$componentName}-#{$variantName}--focus');
    outline-offset: createThemeVar('Input:outlineOffset-#{$componentName}-#{$variantName}--focus');
  }

  .placeholder {
    color: createThemeVar("Input:textColor-placeholder-#{$componentName}-#{$variantName}");
  }

  .adornment {
    color: createThemeVar("Input:textColor-adornment-#{$componentName}-#{$variantName}");
  }
}

$rdp-accent-color: createThemeVar("Input:backgroundColor-item-DatePicker--active");
$rdp-bg-textColor-hover: createThemeVar("Input:backgroundColor-item-DatePicker--hover");
$rdp-selected-color: createThemeVar("Input:textColor-value-DatePicker");
$rdp-cell-size: 40px;
$rdp-caption-font-size: 18px;
$rdp-outline: 2px solid t.useVar($rdp-accent-color);
$rdp-outline-selected: 3px solid t.useVar($rdp-accent-color);
$minHeight: createThemeVar("Input:minHeight-#{$componentName}");

.datePicker {
  display: flex;
  align-items: center;
  cursor: pointer;
  flex-direction: row;
  width: 100%;
  min-height: $minHeight;
  border-width: 1px;
  border-style: solid;
  transition: background-color ease-in .1s;
  overflow: hidden;
  gap: t.$space-2;
  font-size: createThemeVar("Input:fontSize-DatePicker");

  @include variant("default");

  &.error {
    @include variant("error");
  }

  &.warning {
    @include variant("warning");
  }

  &.valid {
    @include variant("success");
  }

  &.disabled {
    cursor: not-allowed;
    background-color: createThemeVar("Input:backgroundColor-DatePicker--disabled");
    color: createThemeVar("Input:textColor-DatePicker--disabled");
    border-color: createThemeVar("Input:borderColor-DatePicker--disabled");

    .indicator, .datePickerInput {
      cursor: not-allowed;
    }
  }
}

.datePickerValue {
  display: flex;
  flex: 1;
}

.inlinePickerMenu {
  padding: 0;
  overflow-y: auto;
  width: fit-content !important;
  height: fit-content;

  @include variant("default");

  &.error {
    @include variant("error");
  }

  &.warning {
    @include variant("warning");
  }

  &.valid {
    @include variant("success");
  }
}

.root {
  width: fit-content;
  margin: 2rem;
}

.datePickerMenu {
  padding: 0;
  overflow-y: auto;
  height: fit-content;
  box-shadow: createThemeVar("Input:boxShadow-menu-DatePicker");
  background-color: createThemeVar("Input:backgroundColor-menu-DatePicker");
  border-radius: createThemeVar("Input:borderRadius-menu-DatePicker");
  border: 1px solid t.useVar($rdp-accent-color);

}

/* Hide elements for devices that are not screen readers */
.vhidden {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  background: transparent;
  border: 0;
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
  position: absolute !important;
  top: 0;
  width: 1px !important;
  height: 1px !important;
  overflow: hidden !important;
  clip: rect(1px, 1px, 1px, 1px) !important;
  border: 0 !important;
}

/* Buttons */
.button_reset {
  appearance: none;
  position: relative;
  margin: 0;
  padding: 0;
  cursor: default;
  color: inherit;
  background: none;
  font: inherit;

  -moz-appearance: none;
  -webkit-appearance: none;
}

.button_reset:focus-visible {
  /* Make sure to reset outline only when :focus-visible is supported */
  outline: none;
}

.button[disabled]:not(.day_selected) {
  opacity: 0.25;
}

.button:not([disabled]) {
  cursor: pointer;
}

.button:focus-visible:not([disabled]) {
  color: inherit;
  background-color: t.useVar($rdp-bg-textColor-hover);
  border: $rdp-outline;
}

.button_next:hover:not([disabled]):not(.day_selected),
.button_previous:hover:not([disabled]):not(.day_selected) {
  background-color: t.useVar($rdp-bg-textColor-hover);
}

.button_next,
.button_previous {
  border: none;
  background: none;
  padding: 0;
  margin: 0;
  cursor: pointer;
  font: inherit;
  color: inherit;
  -moz-appearance: none;
  -webkit-appearance: none;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: relative;
  appearance: none;
}

.button_next:disabled,
.button_next[aria-disabled="true"],
.button_previous:disabled,
.button_previous[aria-disabled="true"] {
  cursor: revert;
  opacity: 0.25;
}

.months {
  display: flex;
}

.month {
  margin: 0 1em;
}

.month:first-child {
  margin-left: 0;
}

.month:last-child {
  margin-right: 0;
}

.month_grid {
  border-collapse: collapse;
}


.caption {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0;
  text-align: left;
}

.multiple_months .caption {
  position: relative;
  display: block;
  text-align: center;
}

.caption_dropdowns {
  position: relative;
  display: inline-flex;
}

.caption_label {
  position: relative;
  z-index: 1;
  display: inline-flex;
  align-items: center;
  margin: 0;
  padding: 0 0.25em;
  white-space: nowrap;
  color: currentColor;
  border: 2px solid transparent;
  font-family: inherit;
  font-size: $rdp-caption-font-size;
  font-weight: bold;
}

.chevron {
  display: inline-block;
  fill: t.$textColor-primary;
}

.nav {
  white-space: nowrap;
}

.multiple_months .caption_start .nav {
  position: absolute;
  top: 50%;
  left: 0;
  transform: translateY(-50%);
}

.multiple_months .caption_end .nav {
  position: absolute;
  top: 50%;
  right: 0;
  transform: translateY(-50%);
}

.nav_button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: $rdp-cell-size;
  height: $rdp-cell-size;
  padding: 0.25em;
  border-radius: 100%;
}

/* ---------- */
/* Dropdowns  */
/* ---------- */

.dropdowns {
  position: relative;
  display: inline-flex;
  align-items: center;
  gap: t.$space-1;
}

.dropdown_year,
.dropdown_month {
  position: relative;
  display: inline-flex;
  align-items: center;
}

.dropdown {
  appearance: none;
  position: absolute;
  z-index: 2;
  top: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  margin: 0;
  padding: 0;
  cursor: inherit;
  opacity: 0;
  border: none;
  background-color: transparent;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

.dropdown[disabled] {
  opacity: unset;
  color: unset;
}

.dropdown:focus-visible:not([disabled]) + .caption_label {
  background-color: t.useVar($rdp-bg-textColor-hover);
  border: $rdp-outline;
  border-radius: 6px;
}

.day {
  width: $rdp-cell-size;
  height: 100%;
  height: $rdp-cell-size;
  padding: 0;
  text-align: center;
}

.weekday {
  font-weight: 500;
  font-size: smaller;

}

.week_number {
  font-size: 0.75em;
  font-weight: 400;
}

.day_button {
  background: none;
  display: flex;
  overflow: hidden;
  align-items: center;
  justify-content: center;
  box-sizing: border-box;
  width: $rdp-cell-size;
  max-width: $rdp-cell-size;
  height: $rdp-cell-size;
  margin: 0;
  border: 2px solid transparent;
  border-radius: 100%;
}

.day_button:disabled {
  cursor: not-allowed;
  opacity: 0.2;
  font-style: italic;
}

.today:not(.outside) {
  font-weight: bold;
}

.selected,
.selected:focus-visible,
.selected:hover {
  color: t.useVar($rdp-selected-color);
  opacity: 1;
  font-weight: bold;
  border-radius: 100%;
  background-color: t.useVar($rdp-accent-color);
}

.outside {
  opacity: 0.7;
}

.selected:focus-visible {
  /* Since the background is the same use again the outline */
  outline: $rdp-outline;
  outline-offset: 2px;
  z-index: 1;
}

.root:not([dir='rtl']) .day_range_start:not(.day_range_end) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.root:not([dir='rtl']) .day_range_end:not(.day_range_start) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.root[dir='rtl'] .day_range_start:not(.day_range_end) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.root[dir='rtl'] .day_range_end:not(.day_range_start) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.day_range_end.day_range_start {
  border-radius: 100%;
}

.day_range_middle {
  border-radius: 0;
}


// --- We export the theme variables to add them to the component renderer
:export {
  themeVars: t.json-stringify($themeVars);
}


