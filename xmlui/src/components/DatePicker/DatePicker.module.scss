@use "../../components-core/theming/themes" as t;

// --- This code snippet is required to collect the theme variables used in this module
$themeVars: (
);

@function createThemeVar($componentVariable) {
  $themeVars: t.appendThemeVar($themeVars, $componentVariable) !global;
  @return t.getThemeVar($themeVars, $componentVariable);
}

$componentName: "DatePicker";
$themeVars: t.composePaddingVars($themeVars, $componentName);

// Generic DatePicker variables
$minHeight-DatePicker: createThemeVar("Input:minHeight-#{$componentName}");
$fontSize-DatePicker: createThemeVar("Input:fontSize-DatePicker");
$backgroundColor-DatePicker--disabled: createThemeVar("Input:backgroundColor-DatePicker--disabled");
$textColor-DatePicker--disabled: createThemeVar("Input:textColor-DatePicker--disabled");
$borderColor-DatePicker--disabled: createThemeVar("Input:borderColor-DatePicker--disabled");

// Default variant variables
$borderRadius-DatePicker-default: createThemeVar("Input:borderRadius-#{$componentName}-default");
$borderColor-DatePicker-default: createThemeVar("Input:borderColor-#{$componentName}-default");
$borderWidth-DatePicker-default: createThemeVar("Input:borderWidth-#{$componentName}-default");
$borderStyle-DatePicker-default: createThemeVar("Input:borderStyle-#{$componentName}-default");
$backgroundColor-DatePicker-default: createThemeVar("Input:backgroundColor-#{$componentName}-default");
$boxShadow-DatePicker-default: createThemeVar("Input:boxShadow-#{$componentName}-default");
$textColor-DatePicker-default: createThemeVar("Input:textColor-#{$componentName}-default");
$borderColor-DatePicker-default--hover: createThemeVar("Input:borderColor-#{$componentName}-default--hover");
$backgroundColor-DatePicker-default--hover: createThemeVar("Input:backgroundColor-#{$componentName}-default--hover");
$boxShadow-DatePicker-default--hover: createThemeVar("Input:boxShadow-#{$componentName}-default--hover");
$textColor-DatePicker-default--hover: createThemeVar("Input:textColor-#{$componentName}-default--hover");
$outlineWidth-DatePicker-default--focus: createThemeVar("Input:outlineWidth-#{$componentName}-default--focus");
$outlineColor-DatePicker-default--focus: createThemeVar("Input:outlineColor-#{$componentName}-default--focus");
$outlineStyle-DatePicker-default--focus: createThemeVar("Input:outlineStyle-#{$componentName}-default--focus");
$outlineOffset-DatePicker-default--focus: createThemeVar("Input:outlineOffset-#{$componentName}-default--focus");
$textColor-placeholder-DatePicker-default: createThemeVar("Input:textColor-placeholder-#{$componentName}-default");
$fontSize-placeholder-DatePicker-default: createThemeVar("Input:fontSize-placeholder-#{$componentName}-default");
$color-adornment-DatePicker-default: createThemeVar("Input:color-adornment-#{$componentName}-default");

// Error variant variables
$borderRadius-DatePicker-error: createThemeVar("Input:borderRadius-#{$componentName}-error");
$borderColor-DatePicker-error: createThemeVar("Input:borderColor-#{$componentName}-error");
$borderWidth-DatePicker-error: createThemeVar("Input:borderWidth-#{$componentName}-error");
$borderStyle-DatePicker-error: createThemeVar("Input:borderStyle-#{$componentName}-error");
$backgroundColor-DatePicker-error: createThemeVar("Input:backgroundColor-#{$componentName}-error");
$boxShadow-DatePicker-error: createThemeVar("Input:boxShadow-#{$componentName}-error");
$textColor-DatePicker-error: createThemeVar("Input:textColor-#{$componentName}-error");
$borderColor-DatePicker-error--hover: createThemeVar("Input:borderColor-#{$componentName}-error--hover");
$backgroundColor-DatePicker-error--hover: createThemeVar("Input:backgroundColor-#{$componentName}-error--hover");
$boxShadow-DatePicker-error--hover: createThemeVar("Input:boxShadow-#{$componentName}-error--hover");
$textColor-DatePicker-error--hover: createThemeVar("Input:textColor-#{$componentName}-error--hover");
$outlineWidth-DatePicker-error--focus: createThemeVar("Input:outlineWidth-#{$componentName}-error--focus");
$outlineColor-DatePicker-error--focus: createThemeVar("Input:outlineColor-#{$componentName}-error--focus");
$outlineStyle-DatePicker-error--focus: createThemeVar("Input:outlineStyle-#{$componentName}-error--focus");
$outlineOffset-DatePicker-error--focus: createThemeVar("Input:outlineOffset-#{$componentName}-error--focus");
$textColor-placeholder-DatePicker-error: createThemeVar("Input:textColor-placeholder-#{$componentName}-error");
$fontSize-placeholder-DatePicker-error: createThemeVar("Input:fontSize-placeholder-#{$componentName}-error");
$color-adornment-DatePicker-error: createThemeVar("Input:color-adornment-#{$componentName}-error");

// Warning variant variables
$borderRadius-DatePicker-warning: createThemeVar("Input:borderRadius-#{$componentName}-warning");
$borderColor-DatePicker-warning: createThemeVar("Input:borderColor-#{$componentName}-warning");
$borderWidth-DatePicker-warning: createThemeVar("Input:borderWidth-#{$componentName}-warning");
$borderStyle-DatePicker-warning: createThemeVar("Input:borderStyle-#{$componentName}-warning");
$backgroundColor-DatePicker-warning: createThemeVar("Input:backgroundColor-#{$componentName}-warning");
$boxShadow-DatePicker-warning: createThemeVar("Input:boxShadow-#{$componentName}-warning");
$textColor-DatePicker-warning: createThemeVar("Input:textColor-#{$componentName}-warning");
$borderColor-DatePicker-warning--hover: createThemeVar("Input:borderColor-#{$componentName}-warning--hover");
$backgroundColor-DatePicker-warning--hover: createThemeVar("Input:backgroundColor-#{$componentName}-warning--hover");
$boxShadow-DatePicker-warning--hover: createThemeVar("Input:boxShadow-#{$componentName}-warning--hover");
$textColor-DatePicker-warning--hover: createThemeVar("Input:textColor-#{$componentName}-warning--hover");
$outlineWidth-DatePicker-warning--focus: createThemeVar("Input:outlineWidth-#{$componentName}-warning--focus");
$outlineColor-DatePicker-warning--focus: createThemeVar("Input:outlineColor-#{$componentName}-warning--focus");
$outlineStyle-DatePicker-warning--focus: createThemeVar("Input:outlineStyle-#{$componentName}-warning--focus");
$outlineOffset-DatePicker-warning--focus: createThemeVar("Input:outlineOffset-#{$componentName}-warning--focus");
$textColor-placeholder-DatePicker-warning: createThemeVar("Input:textColor-placeholder-#{$componentName}-warning");
$fontSize-placeholder-DatePicker-warning: createThemeVar("Input:fontSize-placeholder-#{$componentName}-warning");
$color-adornment-DatePicker-warning: createThemeVar("Input:color-adornment-#{$componentName}-warning");

// Success variant variables
$borderRadius-DatePicker-success: createThemeVar("Input:borderRadius-#{$componentName}-success");
$borderColor-DatePicker-success: createThemeVar("Input:borderColor-#{$componentName}-success");
$borderWidth-DatePicker-success: createThemeVar("Input:borderWidth-#{$componentName}-success");
$borderStyle-DatePicker-success: createThemeVar("Input:borderStyle-#{$componentName}-success");
$backgroundColor-DatePicker-success: createThemeVar("Input:backgroundColor-#{$componentName}-success");
$boxShadow-DatePicker-success: createThemeVar("Input:boxShadow-#{$componentName}-success");
$textColor-DatePicker-success: createThemeVar("Input:textColor-#{$componentName}-success");
$borderColor-DatePicker-success--hover: createThemeVar("Input:borderColor-#{$componentName}-success--hover");
$backgroundColor-DatePicker-success--hover: createThemeVar("Input:backgroundColor-#{$componentName}-success--hover");
$boxShadow-DatePicker-success--hover: createThemeVar("Input:boxShadow-#{$componentName}-success--hover");
$textColor-DatePicker-success--hover: createThemeVar("Input:textColor-#{$componentName}-success--hover");
$outlineWidth-DatePicker-success--focus: createThemeVar("Input:outlineWidth-#{$componentName}-success--focus");
$outlineColor-DatePicker-success--focus: createThemeVar("Input:outlineColor-#{$componentName}-success--focus");
$outlineStyle-DatePicker-success--focus: createThemeVar("Input:outlineStyle-#{$componentName}-success--focus");
$outlineOffset-DatePicker-success--focus: createThemeVar("Input:outlineOffset-#{$componentName}-success--focus");
$textColor-placeholder-DatePicker-success: createThemeVar("Input:textColor-placeholder-#{$componentName}-success");
$fontSize-placeholder-DatePicker-success: createThemeVar("Input:fontSize-placeholder-#{$componentName}-success");
$color-adornment-DatePicker-success: createThemeVar("Input:color-adornment-#{$componentName}-success");

// Menu variables
$boxShadow-menu-DatePicker: createThemeVar("Input:boxShadow-menu-DatePicker");
$backgroundColor-menu-DatePicker: createThemeVar("Input:backgroundColor-menu-DatePicker");
$borderRadius-menu-DatePicker: createThemeVar("Input:borderRadius-menu-DatePicker");

// Item variables
$rdp-accent-color: createThemeVar("Input:backgroundColor-item-DatePicker--active");
$backgroundColor-item-DatePicker--hover: createThemeVar("Input:backgroundColor-item-DatePicker--hover");
$rdp-selected-color: createThemeVar("Input:textColor-value-DatePicker");
$borderColor-selectedItem-DatePicker: createThemeVar("Input:borderColor-selectedItem-DatePicker");

$rdp-cell-size: 40px;
$rdp-caption-font-size: 18px;
$rdp-outline: 2px solid t.useVar($rdp-accent-color);
$rdp-outline-selected: 3px solid t.useVar($rdp-accent-color);

// --- CSS properties of a particular DatePicker variant
@mixin variant($variantName) {
  @if $variantName == "default" {
    border-radius: $borderRadius-DatePicker-default;
    border-color: $borderColor-DatePicker-default;
    border-width: $borderWidth-DatePicker-default;
    border-style: $borderStyle-DatePicker-default;
    background-color: $backgroundColor-DatePicker-default;
    box-shadow: $boxShadow-DatePicker-default;
    color: $textColor-DatePicker-default;

    &:hover {
      border-color: $borderColor-DatePicker-default--hover;
      background-color: $backgroundColor-DatePicker-default--hover;
      box-shadow: $boxShadow-DatePicker-default--hover;
      color: $textColor-DatePicker-default--hover;
    }

    &:focus {
      outline-width: $outlineWidth-DatePicker-default--focus;
      outline-color: $outlineColor-DatePicker-default--focus;
      outline-style: $outlineStyle-DatePicker-default--focus;
      outline-offset: $outlineOffset-DatePicker-default--focus;
    }

    .placeholder {
      color: $textColor-placeholder-DatePicker-default;
      font-size: $fontSize-placeholder-DatePicker-default;
    }

    .adornment {
      color: $color-adornment-DatePicker-default;
    }
  } @else if $variantName == "error" {
    border-radius: $borderRadius-DatePicker-error;
    border-color: $borderColor-DatePicker-error;
    border-width: $borderWidth-DatePicker-error;
    border-style: $borderStyle-DatePicker-error;
    background-color: $backgroundColor-DatePicker-error;
    box-shadow: $boxShadow-DatePicker-error;
    color: $textColor-DatePicker-error;

    &:hover {
      border-color: $borderColor-DatePicker-error--hover;
      background-color: $backgroundColor-DatePicker-error--hover;
      box-shadow: $boxShadow-DatePicker-error--hover;
      color: $textColor-DatePicker-error--hover;
    }

    &:focus {
      outline-width: $outlineWidth-DatePicker-error--focus;
      outline-color: $outlineColor-DatePicker-error--focus;
      outline-style: $outlineStyle-DatePicker-error--focus;
      outline-offset: $outlineOffset-DatePicker-error--focus;
    }

    .placeholder {
      color: $textColor-placeholder-DatePicker-error;
      font-size: $fontSize-placeholder-DatePicker-error;
    }

    .adornment {
      color: $color-adornment-DatePicker-error;
    }
  } @else if $variantName == "warning" {
    border-radius: $borderRadius-DatePicker-warning;
    border-color: $borderColor-DatePicker-warning;
    border-width: $borderWidth-DatePicker-warning;
    border-style: $borderStyle-DatePicker-warning;
    background-color: $backgroundColor-DatePicker-warning;
    box-shadow: $boxShadow-DatePicker-warning;
    color: $textColor-DatePicker-warning;

    &:hover {
      border-color: $borderColor-DatePicker-warning--hover;
      background-color: $backgroundColor-DatePicker-warning--hover;
      box-shadow: $boxShadow-DatePicker-warning--hover;
      color: $textColor-DatePicker-warning--hover;
    }

    &:focus {
      outline-width: $outlineWidth-DatePicker-warning--focus;
      outline-color: $outlineColor-DatePicker-warning--focus;
      outline-style: $outlineStyle-DatePicker-warning--focus;
      outline-offset: $outlineOffset-DatePicker-warning--focus;
    }

    .placeholder {
      color: $textColor-placeholder-DatePicker-warning;
      font-size: $fontSize-placeholder-DatePicker-warning;
    }

    .adornment {
      color: $color-adornment-DatePicker-warning;
    }
  } @else if $variantName == "success" {
    border-radius: $borderRadius-DatePicker-success;
    border-color: $borderColor-DatePicker-success;
    border-width: $borderWidth-DatePicker-success;
    border-style: $borderStyle-DatePicker-success;
    background-color: $backgroundColor-DatePicker-success;
    box-shadow: $boxShadow-DatePicker-success;
    color: $textColor-DatePicker-success;

    &:hover {
      border-color: $borderColor-DatePicker-success--hover;
      background-color: $backgroundColor-DatePicker-success--hover;
      box-shadow: $boxShadow-DatePicker-success--hover;
      color: $textColor-DatePicker-success--hover;
    }

    &:focus {
      outline-width: $outlineWidth-DatePicker-success--focus;
      outline-color: $outlineColor-DatePicker-success--focus;
      outline-style: $outlineStyle-DatePicker-success--focus;
      outline-offset: $outlineOffset-DatePicker-success--focus;
    }

    .placeholder {
      color: $textColor-placeholder-DatePicker-success;
      font-size: $fontSize-placeholder-DatePicker-success;
    }

    .adornment {
      color: $color-adornment-DatePicker-success;
    }
  }
}

@layer components {
  .datePicker {
    display: flex;
    align-items: center;
    cursor: pointer;
    flex-direction: row;
    width: 100%;
    min-height: $minHeight-DatePicker;
    border-width: 1px;
    border-style: solid;
    transition: background-color ease-in 0.1s;
    overflow: hidden;
    gap: t.$space-2;
    font-size: $fontSize-DatePicker;
    @include t.paddingVars($themeVars, $componentName);

    @include variant("default");

    &.error {
      @include variant("error");
    }

    &.warning {
      @include variant("warning");
    }

    &.valid {
      @include variant("success");
    }

    &.disabled {
      cursor: not-allowed;
      background-color: $backgroundColor-DatePicker--disabled;
      color: $textColor-DatePicker--disabled;
      border-color: $borderColor-DatePicker--disabled;

      .indicator,
      .datePickerInput {
        cursor: not-allowed;
      }
    }
  }

  .inlinePickerMenu {
    padding: 0;
    overflow-y: auto;
    width: 100%;
    max-width: fit-content;
    height: fit-content;

    @include variant("default");

    &.error {
      @include variant("error");
    }

    &.warning {
      @include variant("warning");
    }

    &.valid {
      @include variant("success");
    }
  }

  .datePickerMenu {
    padding: t.$space-4;
    overflow-y: auto;
    height: fit-content;
    box-shadow: $boxShadow-menu-DatePicker;
    background-color: $backgroundColor-menu-DatePicker;
    border-radius: $borderRadius-menu-DatePicker;
    border: 1px solid $rdp-accent-color;
  }

  /* Variables declaration */
  /* prettier-ignore */
  .root {
    --rdp-day-height: 44px;
    /* The height of the day cells. */
    --rdp-day-width: 44px;
    /* The width of the day cells. */

    --rdp-day_button-border-radius: 100%;
    /* The border radius of the day cells. */
    --rdp-day_button-border: 2px solid transparent;
    /* The border of the day cells. */
    --rdp-day_button-height: 42px;
    /* The height of the day cells. */
    --rdp-day_button-width: 42px;
    /* The width of the day cells. */

    --rdp-disabled-opacity: 0.5;
    /* The opacity of the disabled days. */
    --rdp-outside-opacity: 0.75;
    /* The opacity of the days outside the current month. */

    --rdp-dropdown-gap: 0.5rem;
    /* The gap between the dropdowns used in the month captons. */

    --rdp-months-gap: 2rem;
    /* The gap between the months in the multi-month view. */

    --rdp-nav_button-disabled-opacity: 0.5;
    /* The opacity of the disabled navigation buttons. */
    --rdp-nav_button-height: 2.25rem;
    /* The height of the navigation buttons. */
    --rdp-nav_button-width: 2.25rem;
    /* The width of the navigation buttons. */
    --rdp-nav-height: 2.75rem;
    /* The height of the navigation bar. */

    --rdp-range_middle-color: inherit;
    /* The color of the range text. */

    --rdp-range_start-color: white;
    /* The color of the range text. */
    --rdp-range_start-background: linear-gradient(var(--rdp-gradient-direction), transparent 50%, $backgroundColor-item-DatePicker--hover 50%);
    /* Used for the background of the start of the selected range. */
    --rdp-range_start-date-background-color: $rdp-accent-color;
    /* The background color of the date when at the start of the selected range. */

    --rdp-range_end-background: linear-gradient(var(--rdp-gradient-direction), var(--rdp-range_middle-background-color) 50%, transparent 50%);
    /* Used for the background of the end of the selected range. */
    --rdp-range_end-color: white;
    /* The color of the range text. */
    --rdp-range_end-date-background-color: $rdp-accent-color;
    /* The background color of the date when at the end of the selected range. */

    --rdp-week_number-border-radius: 100%;
    /* The border radius of the week number. */
    --rdp-week_number-border: 2px solid transparent;
    /* The border of the week number. */

    --rdp-week_number-height: var(--rdp-day-height);
    /* The height of the week number cells. */
    --rdp-week_number-opacity: 0.75;
    /* The opacity of the week number. */
    --rdp-week_number-width: var(--rdp-day-width);
    /* The width of the week number cells. */
    --rdp-weeknumber-text-align: center;
    /* The text alignment of the weekday cells. */

    --rdp-weekday-opacity: 0.75;
    /* The opacity of the weekday. */
    --rdp-weekday-padding: 0.5rem 0rem;
    /* The padding of the weekday. */
    --rdp-weekday-text-align: center;
    /* The text alignment of the weekday cells. */

    --rdp-gradient-direction: 90deg;

    --rdp-animation_duration: 0.3s;
    --rdp-animation_timing: cubic-bezier(0.4, 0, 0.2, 1);
  }

  .root[dir="rtl"] {
    --rdp-gradient-direction: -90deg;
  }

  .root[data-broadcast-calendar="true"] {
    --rdp-outside-opacity: unset;
  }

  /* Root of the component. */
  .root {
    position: relative;
    /* Required to position the navigation toolbar. */
    box-sizing: border-box;
  }

  .root * {
    box-sizing: border-box;
  }

  .day {
    width: var(--rdp-day-width);
    height: var(--rdp-day-height);
    text-align: center;
  }

  .day_button {
    background: none;
    padding: 0;
    margin: 0;
    cursor: pointer;
    font: inherit;
    color: inherit;
    justify-content: center;
    align-items: center;
    display: flex;

    width: var(--rdp-day_button-width);
    height: var(--rdp-day_button-height);
    border: var(--rdp-day_button-border);
    border-radius: var(--rdp-day_button-border-radius);

    &:hover {
      background-color: $backgroundColor-item-DatePicker--hover;
    }
  }

  .day_button:disabled {
    cursor: revert;
  }

  .caption_label {
    z-index: 1;

    position: relative;
    display: inline-flex;
    align-items: center;
    padding-left: t.$space-2;
    padding-right: t.$space-2;

    white-space: nowrap;
    border: 0;
  }

  .dropdown:focus-visible~.caption_label {
    outline: 5px auto t.$outlineColor--focus;
  }

  .button_next,
  .button_previous {
    border: none;
    background: none;
    padding: 0;
    margin: 0;
    cursor: pointer;
    font: inherit;
    color: inherit;
    -moz-appearance: none;
    -webkit-appearance: none;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    position: relative;
    appearance: none;

    width: var(--rdp-nav_button-width);
    height: var(--rdp-nav_button-height);

    &:hover {
      background-color: $backgroundColor-item-DatePicker--hover;
    }
  }

  .button_next:disabled,
  .button_next[aria-disabled="true"],
  .button_previous:disabled,
  .button_previous[aria-disabled="true"] {
    cursor: revert;

    opacity: var(--rdp-nav_button-disabled-opacity);
  }

  .chevron {
    display: inline-block;
    fill: currentColor;
  }

  .root[dir="rtl"] .nav .chevron {
    transform: rotate(180deg);
    transform-origin: 50%;
  }

  .dropdowns {
    position: relative;
    display: inline-flex;
    align-items: center;
    gap: 0;
  }

  .dropdown {
    z-index: 2;

    /* Reset */
    opacity: 0;
    appearance: none;
    position: absolute;
    inset-block-start: 0;
    inset-block-end: 0;
    inset-inline-start: 0;
    width: 100%;
    margin: 0;
    padding: 0;
    cursor: inherit;
    border: none;
    line-height: inherit;
  }

  .dropdown_root {
    position: relative;
    display: inline-flex;
    align-items: center;
    padding: t.$space-1_5;

    &:hover {
      background-color: $backgroundColor-item-DatePicker--hover;
      cursor: pointer;
    }
  }

  .dropdown_root[data-disabled="true"] .chevron {
    opacity: var(--rdp-disabled-opacity);
  }

  .month_caption {
    display: flex;
    align-content: center;
    padding: t.$space-3 t.$space-3 t.$space-3 t.$space-1;
    height: var(--rdp-nav-height);
    font-weight: bold;
    font-size: large;
  }

  .root[data-nav-layout="around"] .month,
  .root[data-nav-layout="after"] .month {
    position: relative;
  }

  .root[data-nav-layout="around"] .month_caption {
    justify-content: center;
    margin-inline-start: var(--rdp-nav_button-width);
    margin-inline-end: var(--rdp-nav_button-width);
    position: relative;
  }

  .root[data-nav-layout="around"] .button_previous {
    position: absolute;
    inset-inline-start: 0;
    top: 0;
    height: var(--rdp-nav-height);
    display: inline-flex;
  }

  .root[data-nav-layout="around"] .button_next {
    position: absolute;
    inset-inline-end: 0;
    top: 0;
    height: var(--rdp-nav-height);
    display: inline-flex;
    justify-content: center;
  }

  .months {
    position: relative;
    display: flex;
    flex-wrap: wrap;
    gap: var(--rdp-months-gap);
    max-width: fit-content;
  }

  .month_grid {
    border-collapse: collapse;
  }

  .nav {
    position: absolute;
    inset-block-start: 0;
    inset-inline-end: 0;

    display: flex;
    align-items: center;

    height: var(--rdp-nav-height);
  }

  .weekday {
    opacity: var(--rdp-weekday-opacity);
    padding: var(--rdp-weekday-padding);
    font-weight: 500;
    font-size: smaller;
    color: t.$textColor-secondary;
    text-align: var(--rdp-weekday-text-align);
    text-transform: var(--rdp-weekday-text-transform);
  }

  .week_number {
    opacity: var(--rdp-week_number-opacity);
    font-weight: 400;
    font-size: small;
    height: var(--rdp-week_number-height);
    width: var(--rdp-week_number-width);
    border: var(--rdp-week_number-border);
    border-radius: var(--rdp-week_number-border-radius);
    text-align: var(--rdp-weeknumber-text-align);
  }

  /* DAY MODIFIERS */
  .today:not(.outside) {
    color: t.$color-primary-500;
  }

  .selected {
    font-weight: bold;
    font-size: large;
  }

  .selected .day_button {
    border: 2px solid $borderColor-selectedItem-DatePicker;
  }

  .outside {
    opacity: var(--rdp-outside-opacity);
  }

  .disabled {
    opacity: var(--rdp-disabled-opacity);
  }

  .hidden {
    visibility: hidden;
    color: var(--rdp-range_start-color);
  }

  .range_start {
    background: var(--rdp-range_start-background);
  }

  .range_start .day_button {
    background-color: var(--rdp-range_start-date-background-color);
    color: var(--rdp-range_start-color);
  }

  .range_middle {
    background-color: var(--rdp-range_middle-background-color);
  }

  .range_middle .day_button {
    border-color: transparent;
    border: unset;
    border-radius: unset;
    color: var(--rdp-range_middle-color);
  }

  .range_end {
    background: var(--rdp-range_end-background);
    color: var(--rdp-range_end-color);
  }

  .range_end .day_button {
    color: var(--rdp-range_start-color);
    background-color: var(--rdp-range_end-date-background-color);
  }

  .range_start.range_end {
    background: revert;
  }

  .focusable {
    cursor: pointer;
  }

  .datePickerValue {
    display: flex;
    flex: 1;
  }

  @keyframes rdp-slide_in_left {
    0% {
      transform: translateX(-100%);
    }

    100% {
      transform: translateX(0);
    }
  }

  @keyframes rdp-slide_in_right {
    0% {
      transform: translateX(100%);
    }

    100% {
      transform: translateX(0);
    }
  }

  @keyframes rdp-slide_out_left {
    0% {
      transform: translateX(0);
    }

    100% {
      transform: translateX(-100%);
    }
  }

  @keyframes rdp-slide_out_right {
    0% {
      transform: translateX(0);
    }

    100% {
      transform: translateX(100%);
    }
  }

  .weeks_before_enter {
    animation: rdp-slide_in_left var(--rdp-animation_duration) var(--rdp-animation_timing) forwards;
  }

  .weeks_before_exit {
    animation: rdp-slide_out_left var(--rdp-animation_duration) var(--rdp-animation_timing) forwards;
  }

  .weeks_after_enter {
    animation: rdp-slide_in_right var(--rdp-animation_duration) var(--rdp-animation_timing) forwards;
  }

  .weeks_after_exit {
    animation: rdp-slide_out_right var(--rdp-animation_duration) var(--rdp-animation_timing) forwards;
  }

  .root[dir="rtl"] .weeks_after_enter {
    animation: rdp-slide_in_left var(--rdp-animation_duration) var(--rdp-animation_timing) forwards;
  }

  .root[dir="rtl"] .weeks_before_exit {
    animation: rdp-slide_out_right var(--rdp-animation_duration) var(--rdp-animation_timing) forwards;
  }

  .root[dir="rtl"] .weeks_before_enter {
    animation: rdp-slide_in_right var(--rdp-animation_duration) var(--rdp-animation_timing) forwards;
  }

  .root[dir="rtl"] .weeks_after_exit {
    animation: rdp-slide_out_left var(--rdp-animation_duration) var(--rdp-animation_timing) forwards;
  }

  @keyframes rdp-fade_in {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }

  @keyframes rdp-fade_out {
    from {
      opacity: 1;
    }

    to {
      opacity: 0;
    }
  }

  .caption_after_enter {
    animation: rdp-fade_in var(--rdp-animation_duration) var(--rdp-animation_timing) forwards;
  }

  .caption_after_exit {
    animation: rdp-fade_out var(--rdp-animation_duration) var(--rdp-animation_timing) forwards;
  }

  .caption_before_enter {
    animation: rdp-fade_in var(--rdp-animation_duration) var(--rdp-animation_timing) forwards;
  }

  .caption_before_exit {
    animation: rdp-fade_out var(--rdp-animation_duration) var(--rdp-animation_timing) forwards;
  }
}

// --- We export the theme variables to add them to the component renderer
:export {
  themeVars: t.json-stringify($themeVars);
}