@use "@components-core/theming/themes" as t;

// --- This code snippet is required to collect the theme variables used in this module
$component: "OffCanvas";

$themeVars: ();
@function createThemeVar($componentVariable) {
  $themeVars: t.appendThemeVar($themeVars, $componentVariable) !global;
  @return t.getThemeVar($themeVars, $componentVariable);
}

$padding-OffCanvas: createThemeVar("padding-#{$component}");
$padding-horizontal-OffCanvas: createThemeVar("padding-horizontal-#{$component}");
$padding-vertical-OffCanvas: createThemeVar("padding-vertical-#{$component}");
$shadow-vertical-OffCanvas: createThemeVar("shadow-vertical-#{$component}");
$shadow-horizontal-OffCanvas: createThemeVar("shadow-horizontal-#{$component}");
$color-bg-OffCanvas: createThemeVar("color-bg-#{$component}");
$width-OffCanvas: createThemeVar("width-#{$component}");
$margin-bottom-title-OffCanvas: createThemeVar("margin-bottom-title-#{$component}");

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  opacity: 0;
  pointer-events: none; /* So it doesn't interfere when not open */
  transition: opacity 0.3s ease-in-out;
  background-color: rgba(0, 0, 0, 0.3); /* Optional dark backdrop */
  z-index: 999; /* Place it above your content */
}

.overlayVisible {
  opacity: 1;
  pointer-events: auto;
}

.offCanvas {
  position: fixed;
  background-color: $color-bg-OffCanvas;
  z-index: 1000;
  transition: transform 0.3s ease;
  width: $width-OffCanvas;
  padding: $padding-OffCanvas;
  padding-left: $padding-horizontal-OffCanvas;
  padding-right: $padding-horizontal-OffCanvas;
  padding-top: $padding-vertical-OffCanvas;
  padding-bottom: $padding-vertical-OffCanvas;
  height: 100vh;
}

/* By default (right side) */
.offCanvas.right {
  top: 0;
  right: 0;
  transform: translateX(100%);
  box-shadow: $shadow-horizontal-OffCanvas;
}

.offCanvas.left {
  top: 0;
  left: 0;
  transform: translateX(-100%);
  box-shadow: $shadow-horizontal-OffCanvas;
}

.offCanvas.top {
  top: 0;
  left: 0;
  width: 100%;
  height: 300px; /* or your desired height */
  transform: translateY(-100%);
  box-shadow: $shadow-vertical-OffCanvas;
}

.offCanvas.bottom {
  bottom: 0;
  left: 0;
  width: 100%;
  height: 300px; /* or your desired height */
  transform: translateY(100%);
  box-shadow: $shadow-vertical-OffCanvas;
}

.offCanvas.open {
  transform: translate(0);
}

.button {
  padding: 0.25rem;
  padding-top: 0;
  right: 0.75rem;
  background: transparent;
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
}

.closeButton {
  position: absolute;
  top: 0.05rem;
  padding: 0.25rem;
  right: 0.75rem;
  background: transparent;
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
}

.spacer {
  flex: 1 1 0 !important;
  place-self: stretch;
}

.offCanvasHeader {
  display: flex;
  flex: 1;
  flex-direction: row;
  margin-bottom: $margin-bottom-title-OffCanvas;
}

.offCanvasButtonSpace {
  width: 0.5rem;
}

.offCanvasTitle {
  flex: 1;
  margin-bottom: $margin-bottom-title-OffCanvas;
  font-size: t.$font-size-large;
}

// --- We export the theme variables to add them to the component renderer
:export {
  themeVars: t.json-stringify($themeVars);
}
