The XMLUI Runtime Architecture

  Core Components:
  - Parser Layer (src/parsers/xmlui-parser/parser.ts): Converts XMLUI markup to AST
  - Execution Engine (src/components-core/script-runner/): Custom JavaScript interpreter
  - Transform Layer: Converts AST to React components

  What "Sandbox" Actually Means

  The term "sandbox" in XMLUI context refers to a controlled execution environment, not security
  isolation. From dev-docs/rendering-fundamentals.md:

  "The code never turns into native JavaScript as the browser runs a loaded JavaScript file. The engine, 
  equipped with its parser (and pre-compiler), transforms the scripting code into an intermediate 
  representation."

  Key Safety Features:
  - Custom interpreter prevents direct browser API access (script-runner/eval-tree-sync.ts)
  - Banned functions list (script-runner/bannedFunctions.ts)
  - Timeout protection for infinite loops (1000ms limit)
  - Controlled scope management

  Compilation vs Interpretation

  No Traditional Compiler: XMLUI uses runtime interpretation. The main transformation happens in
  xmlui-parser.ts:

  export function xmlUiMarkupToComponent(source: string, fileId: string | number = 0)

  Two Execution Modes:
  1. Static Mode: Files parsed at runtime in browser
  2. Build Mode: Pre-compilation to intermediate representations (dev-docs/next/project-build.md)

  Key Insighs:

  XMLUI treats JavaScript as data to be interpreted rather than code to execute directly. This provides
  safety and control while maintaining JavaScript expressiveness - essentially a custom JavaScript
  virtual machine running inside the browser.

  XMLUI can run the code both synchronously and asynchronously. While binding expressions (property and variable values used 
  in the markup) are evaluated synchronously, event handlers run asynchronously. We can create even infinite loops in event handlers, 
  which will not prevent the UI from responding (and other event handlers will continue to function normally).

  Sources:
  - src/components-core/script-runner/eval-tree-sync.ts
  - dev-docs/rendering-fundamentals.md
  - dev-docs/next/project-build.md
  - src/parsers/xmlui-parser/parser.ts

